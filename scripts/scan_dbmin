#!/bin/bash
set -e

export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

retry=3
url_list="google.com"
msg="dbmin is exposed to pubic in the unsecure way. Fix it before you are hacked!!!"
mail_sender="check@google.com"
email_list=""
smtp_server=""

function do_notify_on_error() {
  status=$1
  url=$2
  echo "url=$url; status=$status"
  if [ ! -z ${smtp_server} ]; then
    [ ! $status -eq 0 ] && echo -e ${msg} | mail -s "${url}: ${msg}" -S smtp=smtp://${smtp_server} -S from="${mail_sender}" ${email_list}
  else
    [ ! $status -eq 0 ] && echo -e ${msg} | mail -s "${url}: ${msg}" -S from="${mail_sender}" ${email_list}
  fi
}

function check_dbmin() {
  url_item=$1
  for ((i=0;i<$retry;i++)); do
      res=`curl -Is ${url_item}`
      if [ "$(echo ${res} | grep 301)" != "" ]; then
        location=`echo "${res}" | grep "Location" | cut -d " " -f 2 | strings`
        protocol=`echo "${location}" | cut -d ":" -f 1`
        if [ "${protocol}" != "https" ]; then
          return 1
        fi
        res=`curl -Is -k  ${location}`
        if [ "$(echo ${res} | grep '403 Forbidden')" != "" ]; then
          continue
        fi
        if [ "$(echo ${res} | grep '401\|WWW-Authenticate')" != "" ]; then
          continue
        fi
        return 1
      fi
      return 1
      sleep 1
  done
  return 0
}

function check_dbmin_list (){
  for url_item in ${url_list}; do
    check_dbmin ${url_item}
    do_notify_on_error $? ${url_item}
  done
}

check_dbmin_list

