{"version":3,"sources":["webpack:///56.703a5ea67ae291b963de.js","webpack:///./components/password_reset_form.jsx"],"names":["webpackJsonp","1413","module","exports","__webpack_require__","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_reactDom","_reactDom2","_utils","Utils","newObj","key","prototype","hasOwnProperty","call","_constants","_constants2","_reactIntl","_user_actions","_propTypes","_propTypes2","_react","_react2","PasswordResetForm","_React$Component","props","this","_this","__proto__","handlePasswordReset","bind","state","e","_this2","preventDefault","password","findDOMNode","refs","length","MIN_PASSWORD_LENGTH","setState","error","createElement","FormattedMessage","id","defaultMessage","values","chars","resetPassword","location","query","token","err","message","className","formClass","onSubmit","siteName","window","mm_config","SiteName","type","name","ref","placeholder","localizeMessage","spellCheck","Component","defaultProps","propTypes","params","object","isRequired"],"mappings":"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","file":"56.703a5ea67ae291b963de.js","sourcesContent":["webpackJsonp([56],{\n\n/***/ 1413:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _reactDom = __webpack_require__(483);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _utils = __webpack_require__(28);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _constants = __webpack_require__(10);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _reactIntl = __webpack_require__(197);\n\nvar _user_actions = __webpack_require__(114);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PasswordResetForm = function (_React$Component) {\n    (0, _inherits3.default)(PasswordResetForm, _React$Component);\n\n    function PasswordResetForm(props) {\n        (0, _classCallCheck3.default)(this, PasswordResetForm);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (PasswordResetForm.__proto__ || (0, _getPrototypeOf2.default)(PasswordResetForm)).call(this, props));\n\n        _this.handlePasswordReset = _this.handlePasswordReset.bind(_this);\n\n        _this.state = {};\n        return _this;\n    }\n\n    (0, _createClass3.default)(PasswordResetForm, [{\n        key: 'handlePasswordReset',\n        value: function handlePasswordReset(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            var password = _reactDom2.default.findDOMNode(this.refs.password).value;\n            if (!password || password.length < _constants2.default.MIN_PASSWORD_LENGTH) {\n                this.setState({\n                    error: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'password_form.error',\n                        defaultMessage: 'Please enter at least {chars} characters.',\n                        values: {\n                            chars: _constants2.default.MIN_PASSWORD_LENGTH\n                        }\n                    })\n                });\n                return;\n            }\n\n            this.setState({\n                error: null\n            });\n\n            (0, _user_actions.resetPassword)(this.props.location.query.token, password, function () {\n                _this2.setState({ error: null });\n            }, function (err) {\n                _this2.setState({ error: err.message });\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var error = null;\n            if (this.state.error) {\n                error = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.error\n                    )\n                );\n            }\n\n            var formClass = 'form-group';\n            if (error) {\n                formClass += ' has-error';\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'col-sm-12' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'signup-team__container' },\n                    _react2.default.createElement(\n                        'h3',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'password_form.title',\n                            defaultMessage: 'Password Reset'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'form',\n                        { onSubmit: this.handlePasswordReset },\n                        _react2.default.createElement(\n                            'p',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'password_form.enter',\n                                defaultMessage: 'Enter a new password for your {siteName} account.',\n                                values: {\n                                    siteName: global.window.mm_config.SiteName\n                                }\n                            })\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: formClass },\n                            _react2.default.createElement('input', {\n                                type: 'password',\n                                className: 'form-control',\n                                name: 'password',\n                                ref: 'password',\n                                placeholder: Utils.localizeMessage('password_form.pwd', 'Password'),\n                                spellCheck: 'false'\n                            })\n                        ),\n                        error,\n                        _react2.default.createElement(\n                            'button',\n                            {\n                                type: 'submit',\n                                className: 'btn btn-primary'\n                            },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'password_form.change',\n                                defaultMessage: 'Change my password'\n                            })\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return PasswordResetForm;\n}(_react2.default.Component); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nPasswordResetForm.defaultProps = {};\nPasswordResetForm.propTypes = {\n    params: _propTypes2.default.object.isRequired,\n    location: _propTypes2.default.object.isRequired\n};\n\nexports.default = PasswordResetForm;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 56.703a5ea67ae291b963de.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport ReactDOM from 'react-dom';\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport {resetPassword} from 'actions/user_actions.jsx';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\n\nclass PasswordResetForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePasswordReset = this.handlePasswordReset.bind(this);\n\n        this.state = {};\n    }\n    handlePasswordReset(e) {\n        e.preventDefault();\n\n        const password = ReactDOM.findDOMNode(this.refs.password).value;\n        if (!password || password.length < Constants.MIN_PASSWORD_LENGTH) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='password_form.error'\n                        defaultMessage='Please enter at least {chars} characters.'\n                        values={{\n                            chars: Constants.MIN_PASSWORD_LENGTH\n                        }}\n                    />\n                )\n            });\n            return;\n        }\n\n        this.setState({\n            error: null\n        });\n\n        resetPassword(\n            this.props.location.query.token,\n            password,\n            () => {\n                this.setState({error: null});\n            },\n            (err) => {\n                this.setState({error: err.message});\n            }\n        );\n    }\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>\n                        {this.state.error}\n                    </label>\n                </div>\n            );\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div className='col-sm-12'>\n                <div className='signup-team__container'>\n                    <h3>\n                        <FormattedMessage\n                            id='password_form.title'\n                            defaultMessage='Password Reset'\n                        />\n                    </h3>\n                    <form onSubmit={this.handlePasswordReset}>\n                        <p>\n                            <FormattedMessage\n                                id='password_form.enter'\n                                defaultMessage='Enter a new password for your {siteName} account.'\n                                values={{\n                                    siteName: global.window.mm_config.SiteName\n                                }}\n                            />\n                        </p>\n                        <div className={formClass}>\n                            <input\n                                type='password'\n                                className='form-control'\n                                name='password'\n                                ref='password'\n                                placeholder={Utils.localizeMessage(\n                                    'password_form.pwd',\n                                    'Password'\n                                )}\n                                spellCheck='false'\n                            />\n                        </div>\n                        {error}\n                        <button\n                            type='submit'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='password_form.change'\n                                defaultMessage='Change my password'\n                            />\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nPasswordResetForm.defaultProps = {\n};\nPasswordResetForm.propTypes = {\n    params: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default PasswordResetForm;\n\n\n\n// WEBPACK FOOTER //\n// ./components/password_reset_form.jsx"],"sourceRoot":""}