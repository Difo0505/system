{"version":3,"sources":["webpack:///52.05f347dac670cd1c9aba.js","webpack:///./components/claim/components/oauth_to_email.jsx","webpack:///./actions/admin_actions.jsx?c2a4****"],"names":["webpackJsonp","1377","module","exports","__webpack_require__","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_utils","Utils","newObj","key","prototype","hasOwnProperty","call","_constants","_constants2","_propTypes","_propTypes2","_react","_react2","_reactDom","_reactDom2","_reactIntl","_admin_actions","OAuthToEmail","_React$Component","props","this","_this","__proto__","submit","bind","state","e","_this2","preventDefault","password","findDOMNode","refs","error","localizeMessage","setState","passwordErr","isValidPassword","confirmPassword","passwordconfirm","oauthToEmail","email","err","message","createElement","className","formClass","uiType","currentType","SAML_SERVICE","toUpperCase","toTitleCase","FormattedMessage","id","defaultMessage","values","type","onSubmit","site","window","mm_config","SiteName","name","ref","placeholder","spellCheck","Component","defaultProps","propTypes","string","1644","saveConfig","config","success","_web_client2","reloadConfig","AsyncClient","getConfig","adminResetMfa","userId","_users","getUser","dispatch","getState","getClusterStatus","data","dispatchError","saveComplianceReports","job","testEmail","ldapTest","invalidateAllCaches","recycleDatabaseConnection","adminResetPassword","samlCertificateStatus","ldapSyncNow","getOAuthAppInfo","clientId","allowOAuth2","params","responseType","response_type","client_id","redirectUri","redirect_uri","scope","emailToLdap","loginId","token","ldapId","ldapPassword","emailToOAuth","newType","follow_link","_es","browserHistory","push","regenerateOAuthAppSecret","oauthAppId","uploadBrandImage","brandImage","uploadLicenseFile","file","removeLicenseFile","uploadCertificateFile","certificateFile","removeCertificateFile","certificateId","_web_client","_async_client","_redux_store","_redux_store2"],"mappings":"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","file":"52.05f347dac670cd1c9aba.js","sourcesContent":["webpackJsonp([52],{\n\n/***/ 1377:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _utils = __webpack_require__(28);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _constants = __webpack_require__(10);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(483);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(197);\n\nvar _admin_actions = __webpack_require__(1644);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OAuthToEmail = function (_React$Component) {\n    (0, _inherits3.default)(OAuthToEmail, _React$Component);\n\n    function OAuthToEmail(props) {\n        (0, _classCallCheck3.default)(this, OAuthToEmail);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (OAuthToEmail.__proto__ || (0, _getPrototypeOf2.default)(OAuthToEmail)).call(this, props));\n\n        _this.submit = _this.submit.bind(_this);\n\n        _this.state = {};\n        return _this;\n    }\n\n    (0, _createClass3.default)(OAuthToEmail, [{\n        key: 'submit',\n        value: function submit(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n            var state = {};\n\n            var password = _reactDom2.default.findDOMNode(this.refs.password).value;\n            if (!password) {\n                state.error = Utils.localizeMessage('claim.oauth_to_email.enterPwd', 'Please enter a password.');\n                this.setState(state);\n                return;\n            }\n\n            var passwordErr = Utils.isValidPassword(password);\n            if (passwordErr !== '') {\n                this.setState({\n                    error: passwordErr\n                });\n                return;\n            }\n\n            var confirmPassword = _reactDom2.default.findDOMNode(this.refs.passwordconfirm).value;\n            if (!confirmPassword || password !== confirmPassword) {\n                state.error = Utils.localizeMessage('claim.oauth_to_email.pwdNotMatch', 'Password do not match.');\n                this.setState(state);\n                return;\n            }\n\n            state.error = null;\n            this.setState(state);\n\n            (0, _admin_actions.oauthToEmail)(this.props.email, password, null, function (err) {\n                _this2.setState({ error: err.message });\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var error = null;\n            if (this.state.error) {\n                error = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.error\n                    )\n                );\n            }\n\n            var formClass = 'form-group';\n            if (error) {\n                formClass += ' has-error';\n            }\n\n            var uiType = (this.props.currentType === _constants2.default.SAML_SERVICE ? _constants2.default.SAML_SERVICE.toUpperCase() : Utils.toTitleCase(this.props.currentType)) + ' SSO';\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'h3',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'claim.oauth_to_email.title',\n                        defaultMessage: 'Switch {type} Account to Email',\n                        values: {\n                            type: uiType\n                        }\n                    })\n                ),\n                _react2.default.createElement(\n                    'form',\n                    { onSubmit: this.submit },\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'claim.oauth_to_email.description',\n                            defaultMessage: 'Upon changing your account type, you will only be able to login with your email and password.'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'claim.oauth_to_email.enterNewPwd',\n                            defaultMessage: 'Enter a new password for your {site} email account',\n                            values: {\n                                site: global.window.mm_config.SiteName\n                            }\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: formClass },\n                        _react2.default.createElement('input', {\n                            type: 'password',\n                            className: 'form-control',\n                            name: 'password',\n                            ref: 'password',\n                            placeholder: Utils.localizeMessage('claim.oauth_to_email.newPwd', 'New Password'),\n                            spellCheck: 'false'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: formClass },\n                        _react2.default.createElement('input', {\n                            type: 'password',\n                            className: 'form-control',\n                            name: 'passwordconfirm',\n                            ref: 'passwordconfirm',\n                            placeholder: Utils.localizeMessage('claim.oauth_to_email.confirm', 'Confirm Password'),\n                            spellCheck: 'false'\n                        })\n                    ),\n                    error,\n                    _react2.default.createElement(\n                        'button',\n                        {\n                            type: 'submit',\n                            className: 'btn btn-primary'\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'claim.oauth_to_email.switchTo',\n                            defaultMessage: 'Switch {type} to email and password',\n                            values: {\n                                type: uiType\n                            }\n                        })\n                    )\n                )\n            );\n        }\n    }]);\n    return OAuthToEmail;\n}(_react2.default.Component); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = OAuthToEmail;\n\n\nOAuthToEmail.defaultProps = {};\nOAuthToEmail.propTypes = {\n    currentType: _propTypes2.default.string,\n    email: _propTypes2.default.string\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))\n\n/***/ }),\n\n/***/ 1644:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.saveConfig = saveConfig;\nexports.reloadConfig = reloadConfig;\nexports.adminResetMfa = adminResetMfa;\nexports.getClusterStatus = getClusterStatus;\nexports.saveComplianceReports = saveComplianceReports;\nexports.testEmail = testEmail;\nexports.ldapTest = ldapTest;\nexports.invalidateAllCaches = invalidateAllCaches;\nexports.recycleDatabaseConnection = recycleDatabaseConnection;\nexports.adminResetPassword = adminResetPassword;\nexports.samlCertificateStatus = samlCertificateStatus;\nexports.ldapSyncNow = ldapSyncNow;\nexports.getOAuthAppInfo = getOAuthAppInfo;\nexports.allowOAuth2 = allowOAuth2;\nexports.emailToLdap = emailToLdap;\nexports.emailToOAuth = emailToOAuth;\nexports.oauthToEmail = oauthToEmail;\nexports.regenerateOAuthAppSecret = regenerateOAuthAppSecret;\nexports.uploadBrandImage = uploadBrandImage;\nexports.uploadLicenseFile = uploadLicenseFile;\nexports.removeLicenseFile = removeLicenseFile;\nexports.uploadCertificateFile = uploadCertificateFile;\nexports.removeCertificateFile = removeCertificateFile;\n\nvar _web_client = __webpack_require__(52);\n\nvar _web_client2 = _interopRequireDefault(_web_client);\n\nvar _async_client = __webpack_require__(113);\n\nvar AsyncClient = _interopRequireWildcard(_async_client);\n\nvar _es = __webpack_require__(58);\n\nvar _redux_store = __webpack_require__(36);\n\nvar _redux_store2 = _interopRequireDefault(_redux_store);\n\nvar _users = __webpack_require__(115);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2017-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar dispatch = _redux_store2.default.dispatch;\n\n// Redux actions\n\nvar getState = _redux_store2.default.getState;\n\nfunction saveConfig(config, success, error) {\n    _web_client2.default.saveConfig(config, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction reloadConfig(success, error) {\n    _web_client2.default.reloadConfig(function () {\n        AsyncClient.getConfig();\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction adminResetMfa(userId, success, error) {\n    _web_client2.default.adminResetMfa(userId, function () {\n        (0, _users.getUser)(userId)(dispatch, getState);\n\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction getClusterStatus(success, error) {\n    _web_client2.default.getClusterStatus(function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        AsyncClient.dispatchError(err, 'getClusterStatus');\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction saveComplianceReports(job, success, error) {\n    _web_client2.default.saveComplianceReports(job, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction testEmail(config, success, error) {\n    _web_client2.default.testEmail(config, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction ldapTest(success, error) {\n    _web_client2.default.ldapTest(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction invalidateAllCaches(success, error) {\n    _web_client2.default.invalidateAllCaches(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction recycleDatabaseConnection(success, error) {\n    _web_client2.default.recycleDatabaseConnection(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction adminResetPassword(userId, password, success, error) {\n    _web_client2.default.adminResetPassword(userId, password, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction samlCertificateStatus(success, error) {\n    _web_client2.default.samlCertificateStatus(function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction ldapSyncNow(success, error) {\n    _web_client2.default.ldapSyncNow(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction getOAuthAppInfo(clientId, success, error) {\n    _web_client2.default.getOAuthAppInfo(clientId, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction allowOAuth2(params, success, error) {\n    var responseType = params.response_type;\n    var clientId = params.client_id;\n    var redirectUri = params.redirect_uri;\n    var state = params.state;\n    var scope = params.scope;\n\n    _web_client2.default.allowOAuth2(responseType, clientId, redirectUri, state, scope, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction emailToLdap(loginId, password, token, ldapId, ldapPassword, success, error) {\n    _web_client2.default.emailToLdap(loginId, password, token, ldapId, ldapPassword, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction emailToOAuth(loginId, password, token, newType, success, error) {\n    _web_client2.default.emailToOAuth(loginId, password, token, newType, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction oauthToEmail(email, password, success, error) {\n    _web_client2.default.oauthToEmail(email, password, function (data) {\n        if (data.follow_link) {\n            _es.browserHistory.push(data.follow_link);\n        }\n\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction regenerateOAuthAppSecret(oauthAppId, success, error) {\n    _web_client2.default.regenerateOAuthAppSecret(oauthAppId, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction uploadBrandImage(brandImage, success, error) {\n    _web_client2.default.uploadBrandImage(brandImage, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction uploadLicenseFile(file, success, error) {\n    _web_client2.default.uploadLicenseFile(file, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction removeLicenseFile(success, error) {\n    _web_client2.default.removeLicenseFile(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction uploadCertificateFile(certificateFile, success, error) {\n    _web_client2.default.uploadCertificateFile(certificateFile, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction removeCertificateFile(certificateId, success, error) {\n    _web_client2.default.removeCertificateFile(certificateId, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 52.05f347dac670cd1c9aba.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {oauthToEmail} from 'actions/admin_actions.jsx';\n\nexport default class OAuthToEmail extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.submit = this.submit.bind(this);\n\n        this.state = {};\n    }\n\n    submit(e) {\n        e.preventDefault();\n        const state = {};\n\n        const password = ReactDOM.findDOMNode(this.refs.password).value;\n        if (!password) {\n            state.error = Utils.localizeMessage('claim.oauth_to_email.enterPwd', 'Please enter a password.');\n            this.setState(state);\n            return;\n        }\n\n        const passwordErr = Utils.isValidPassword(password);\n        if (passwordErr !== '') {\n            this.setState({\n                error: passwordErr\n            });\n            return;\n        }\n\n        const confirmPassword = ReactDOM.findDOMNode(this.refs.passwordconfirm).value;\n        if (!confirmPassword || password !== confirmPassword) {\n            state.error = Utils.localizeMessage('claim.oauth_to_email.pwdNotMatch', 'Password do not match.');\n            this.setState(state);\n            return;\n        }\n\n        state.error = null;\n        this.setState(state);\n\n        oauthToEmail(\n            this.props.email,\n            password,\n            null,\n            (err) => {\n                this.setState({error: err.message});\n            }\n        );\n    }\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        const uiType = `${(this.props.currentType === Constants.SAML_SERVICE ? Constants.SAML_SERVICE.toUpperCase() : Utils.toTitleCase(this.props.currentType))} SSO`;\n\n        return (\n            <div>\n                <h3>\n                    <FormattedMessage\n                        id='claim.oauth_to_email.title'\n                        defaultMessage='Switch {type} Account to Email'\n                        values={{\n                            type: uiType\n                        }}\n                    />\n                </h3>\n                <form onSubmit={this.submit}>\n                    <p>\n                        <FormattedMessage\n                            id='claim.oauth_to_email.description'\n                            defaultMessage='Upon changing your account type, you will only be able to login with your email and password.'\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='claim.oauth_to_email.enterNewPwd'\n                            defaultMessage='Enter a new password for your {site} email account'\n                            values={{\n                                site: global.window.mm_config.SiteName\n                            }}\n                        />\n                    </p>\n                    <div className={formClass}>\n                        <input\n                            type='password'\n                            className='form-control'\n                            name='password'\n                            ref='password'\n                            placeholder={Utils.localizeMessage('claim.oauth_to_email.newPwd', 'New Password')}\n                            spellCheck='false'\n                        />\n                    </div>\n                    <div className={formClass}>\n                        <input\n                            type='password'\n                            className='form-control'\n                            name='passwordconfirm'\n                            ref='passwordconfirm'\n                            placeholder={Utils.localizeMessage('claim.oauth_to_email.confirm', 'Confirm Password')}\n                            spellCheck='false'\n                        />\n                    </div>\n                    {error}\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='claim.oauth_to_email.switchTo'\n                            defaultMessage='Switch {type} to email and password'\n                            values={{\n                                type: uiType\n                            }}\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nOAuthToEmail.defaultProps = {\n};\nOAuthToEmail.propTypes = {\n    currentType: PropTypes.string,\n    email: PropTypes.string\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/claim/components/oauth_to_email.jsx","// Copyright (c) 2017-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport Client from 'client/web_client.jsx';\nimport * as AsyncClient from 'utils/async_client.jsx';\nimport {browserHistory} from 'react-router/es6';\n\n// Redux actions\nimport store from 'stores/redux_store.jsx';\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nimport {getUser} from 'mattermost-redux/actions/users';\n\nexport function saveConfig(config, success, error) {\n    Client.saveConfig(\n        config,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function reloadConfig(success, error) {\n    Client.reloadConfig(\n        () => {\n            AsyncClient.getConfig();\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function adminResetMfa(userId, success, error) {\n    Client.adminResetMfa(\n        userId,\n        () => {\n            getUser(userId)(dispatch, getState);\n\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function getClusterStatus(success, error) {\n    Client.getClusterStatus(\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            AsyncClient.dispatchError(err, 'getClusterStatus');\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function saveComplianceReports(job, success, error) {\n    Client.saveComplianceReports(\n        job,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function testEmail(config, success, error) {\n    Client.testEmail(\n        config,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function ldapTest(success, error) {\n    Client.ldapTest(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function invalidateAllCaches(success, error) {\n    Client.invalidateAllCaches(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function recycleDatabaseConnection(success, error) {\n    Client.recycleDatabaseConnection(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function adminResetPassword(userId, password, success, error) {\n    Client.adminResetPassword(\n        userId,\n        password,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function samlCertificateStatus(success, error) {\n    Client.samlCertificateStatus(\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function ldapSyncNow(success, error) {\n    Client.ldapSyncNow(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function getOAuthAppInfo(clientId, success, error) {\n    Client.getOAuthAppInfo(\n        clientId,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function allowOAuth2(params, success, error) {\n    const responseType = params.response_type;\n    const clientId = params.client_id;\n    const redirectUri = params.redirect_uri;\n    const state = params.state;\n    const scope = params.scope;\n\n    Client.allowOAuth2(responseType, clientId, redirectUri, state, scope,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function emailToLdap(loginId, password, token, ldapId, ldapPassword, success, error) {\n    Client.emailToLdap(\n        loginId,\n        password,\n        token,\n        ldapId,\n        ldapPassword,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function emailToOAuth(loginId, password, token, newType, success, error) {\n    Client.emailToOAuth(\n        loginId,\n        password,\n        token,\n        newType,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function oauthToEmail(email, password, success, error) {\n    Client.oauthToEmail(\n        email,\n        password,\n        (data) => {\n            if (data.follow_link) {\n                browserHistory.push(data.follow_link);\n            }\n\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function regenerateOAuthAppSecret(oauthAppId, success, error) {\n    Client.regenerateOAuthAppSecret(\n        oauthAppId,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function uploadBrandImage(brandImage, success, error) {\n    Client.uploadBrandImage(\n        brandImage,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function uploadLicenseFile(file, success, error) {\n    Client.uploadLicenseFile(\n        file,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function removeLicenseFile(success, error) {\n    Client.removeLicenseFile(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function uploadCertificateFile(certificateFile, success, error) {\n    Client.uploadCertificateFile(\n        certificateFile,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function removeCertificateFile(certificateId, success, error) {\n    Client.removeCertificateFile(\n        certificateId,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./actions/admin_actions.jsx"],"sourceRoot":""}