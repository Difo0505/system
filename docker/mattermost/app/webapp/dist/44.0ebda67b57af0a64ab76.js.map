{"version":3,"sources":["webpack:///44.0ebda67b57af0a64ab76.js","webpack:///./components/claim/components/email_to_oauth.jsx","webpack:///./actions/admin_actions.jsx?c2a4*","webpack:///./components/login/components/login_mfa.jsx?99b8"],"names":["webpackJsonp","1375","module","exports","__webpack_require__","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_login_mfa","_login_mfa2","_utils","Utils","newObj","key","prototype","hasOwnProperty","call","_constants","_constants2","_user_actions","_admin_actions","_propTypes","_propTypes2","_react","_react2","_reactDom","_reactDom2","_reactIntl","EmailToOAuth","_React$Component","props","this","_this","__proto__","submit","bind","preSubmit","state","showMfa","password","e","_this2","preventDefault","findDOMNode","refs","error","localizeMessage","setState","checkMfa","email","requiresMfa","err","message","loginId","token","_this3","emailToOAuth","newType","data","follow_link","window","location","href","createElement","className","formClass","type","SAML_SERVICE","toUpperCase","toTitleCase","uiType","content","onSubmit","FormattedMessage","id","defaultMessage","values","site","mm_config","SiteName","name","ref","placeholder","spellCheck","Component","defaultProps","propTypes","string","1644","saveConfig","config","success","_web_client2","reloadConfig","AsyncClient","getConfig","adminResetMfa","userId","_users","getUser","dispatch","getState","getClusterStatus","dispatchError","saveComplianceReports","job","testEmail","ldapTest","invalidateAllCaches","recycleDatabaseConnection","adminResetPassword","samlCertificateStatus","ldapSyncNow","getOAuthAppInfo","clientId","allowOAuth2","params","responseType","response_type","client_id","redirectUri","redirect_uri","scope","emailToLdap","ldapId","ldapPassword","oauthToEmail","_es","browserHistory","push","regenerateOAuthAppSecret","oauthAppId","uploadBrandImage","brandImage","uploadLicenseFile","file","removeLicenseFile","uploadCertificateFile","certificateFile","removeCertificateFile","certificateId","_web_client","_async_client","_redux_store","_redux_store2","1785","LoginMfa","handleSubmit","serverError","trim","replace","errorClass","autoComplete","autoFocus","isRequired","func"],"mappings":"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","file":"44.0ebda67b57af0a64ab76.js","sourcesContent":["webpackJsonp([44],{\n\n/***/ 1375:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _login_mfa = __webpack_require__(1785);\n\nvar _login_mfa2 = _interopRequireDefault(_login_mfa);\n\nvar _utils = __webpack_require__(28);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _constants = __webpack_require__(10);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _user_actions = __webpack_require__(114);\n\nvar _admin_actions = __webpack_require__(1644);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(483);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(197);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EmailToOAuth = function (_React$Component) {\n    (0, _inherits3.default)(EmailToOAuth, _React$Component);\n\n    function EmailToOAuth(props) {\n        (0, _classCallCheck3.default)(this, EmailToOAuth);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (EmailToOAuth.__proto__ || (0, _getPrototypeOf2.default)(EmailToOAuth)).call(this, props));\n\n        _this.submit = _this.submit.bind(_this);\n        _this.preSubmit = _this.preSubmit.bind(_this);\n\n        _this.state = { showMfa: false, password: '' };\n        return _this;\n    }\n\n    (0, _createClass3.default)(EmailToOAuth, [{\n        key: 'preSubmit',\n        value: function preSubmit(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n            var state = {};\n\n            var password = _reactDom2.default.findDOMNode(this.refs.password).value;\n            if (!password) {\n                state.error = Utils.localizeMessage('claim.email_to_oauth.pwdError', 'Please enter your password.');\n                this.setState(state);\n                return;\n            }\n\n            this.setState({ password: password });\n\n            state.error = null;\n            this.setState(state);\n\n            (0, _user_actions.checkMfa)(this.props.email, function (requiresMfa) {\n                if (requiresMfa) {\n                    _this2.setState({ showMfa: true });\n                } else {\n                    _this2.submit(_this2.props.email, password, '');\n                }\n            }, function (err) {\n                _this2.setState({ error: err.message });\n            });\n        }\n    }, {\n        key: 'submit',\n        value: function submit(loginId, password, token) {\n            var _this3 = this;\n\n            (0, _admin_actions.emailToOAuth)(loginId, password, token, this.props.newType, function (data) {\n                if (data.follow_link) {\n                    window.location.href = data.follow_link;\n                }\n            }, function (err) {\n                _this3.setState({ error: err.message, showMfa: false });\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var error = null;\n            if (this.state.error) {\n                error = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.error\n                    )\n                );\n            }\n\n            var formClass = 'form-group';\n            if (error) {\n                formClass += ' has-error';\n            }\n\n            var type = this.props.newType === _constants2.default.SAML_SERVICE ? _constants2.default.SAML_SERVICE.toUpperCase() : Utils.toTitleCase(this.props.newType);\n            var uiType = type + ' SSO';\n\n            var content = void 0;\n            if (this.state.showMfa) {\n                content = _react2.default.createElement(_login_mfa2.default, {\n                    loginId: this.props.email,\n                    password: this.state.password,\n                    submit: this.submit\n                });\n            } else {\n                content = _react2.default.createElement(\n                    'form',\n                    { onSubmit: this.preSubmit },\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'claim.email_to_oauth.ssoType',\n                            defaultMessage: 'Upon claiming your account, you will only be able to login with {type} SSO',\n                            values: {\n                                type: type\n                            }\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'claim.email_to_oauth.ssoNote',\n                            defaultMessage: 'You must already have a valid {type} account',\n                            values: {\n                                type: type\n                            }\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'claim.email_to_oauth.enterPwd',\n                            defaultMessage: 'Enter the password for your {site} account',\n                            values: {\n                                site: global.window.mm_config.SiteName\n                            }\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: formClass },\n                        _react2.default.createElement('input', {\n                            type: 'password',\n                            className: 'form-control',\n                            name: 'password',\n                            ref: 'password',\n                            placeholder: Utils.localizeMessage('claim.email_to_oauth.pwd', 'Password'),\n                            spellCheck: 'false'\n                        })\n                    ),\n                    error,\n                    _react2.default.createElement(\n                        'button',\n                        {\n                            type: 'submit',\n                            className: 'btn btn-primary'\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'claim.email_to_oauth.switchTo',\n                            defaultMessage: 'Switch account to {uiType}',\n                            values: {\n                                uiType: uiType\n                            }\n                        })\n                    )\n                );\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'h3',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'claim.email_to_oauth.title',\n                        defaultMessage: 'Switch Email/Password Account to {uiType}',\n                        values: {\n                            uiType: uiType\n                        }\n                    })\n                ),\n                content\n            );\n        }\n    }]);\n    return EmailToOAuth;\n}(_react2.default.Component); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = EmailToOAuth;\n\n\nEmailToOAuth.defaultProps = {};\nEmailToOAuth.propTypes = {\n    newType: _propTypes2.default.string,\n    email: _propTypes2.default.string\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))\n\n/***/ }),\n\n/***/ 1644:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.saveConfig = saveConfig;\nexports.reloadConfig = reloadConfig;\nexports.adminResetMfa = adminResetMfa;\nexports.getClusterStatus = getClusterStatus;\nexports.saveComplianceReports = saveComplianceReports;\nexports.testEmail = testEmail;\nexports.ldapTest = ldapTest;\nexports.invalidateAllCaches = invalidateAllCaches;\nexports.recycleDatabaseConnection = recycleDatabaseConnection;\nexports.adminResetPassword = adminResetPassword;\nexports.samlCertificateStatus = samlCertificateStatus;\nexports.ldapSyncNow = ldapSyncNow;\nexports.getOAuthAppInfo = getOAuthAppInfo;\nexports.allowOAuth2 = allowOAuth2;\nexports.emailToLdap = emailToLdap;\nexports.emailToOAuth = emailToOAuth;\nexports.oauthToEmail = oauthToEmail;\nexports.regenerateOAuthAppSecret = regenerateOAuthAppSecret;\nexports.uploadBrandImage = uploadBrandImage;\nexports.uploadLicenseFile = uploadLicenseFile;\nexports.removeLicenseFile = removeLicenseFile;\nexports.uploadCertificateFile = uploadCertificateFile;\nexports.removeCertificateFile = removeCertificateFile;\n\nvar _web_client = __webpack_require__(52);\n\nvar _web_client2 = _interopRequireDefault(_web_client);\n\nvar _async_client = __webpack_require__(113);\n\nvar AsyncClient = _interopRequireWildcard(_async_client);\n\nvar _es = __webpack_require__(58);\n\nvar _redux_store = __webpack_require__(36);\n\nvar _redux_store2 = _interopRequireDefault(_redux_store);\n\nvar _users = __webpack_require__(115);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2017-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar dispatch = _redux_store2.default.dispatch;\n\n// Redux actions\n\nvar getState = _redux_store2.default.getState;\n\nfunction saveConfig(config, success, error) {\n    _web_client2.default.saveConfig(config, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction reloadConfig(success, error) {\n    _web_client2.default.reloadConfig(function () {\n        AsyncClient.getConfig();\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction adminResetMfa(userId, success, error) {\n    _web_client2.default.adminResetMfa(userId, function () {\n        (0, _users.getUser)(userId)(dispatch, getState);\n\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction getClusterStatus(success, error) {\n    _web_client2.default.getClusterStatus(function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        AsyncClient.dispatchError(err, 'getClusterStatus');\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction saveComplianceReports(job, success, error) {\n    _web_client2.default.saveComplianceReports(job, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction testEmail(config, success, error) {\n    _web_client2.default.testEmail(config, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction ldapTest(success, error) {\n    _web_client2.default.ldapTest(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction invalidateAllCaches(success, error) {\n    _web_client2.default.invalidateAllCaches(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction recycleDatabaseConnection(success, error) {\n    _web_client2.default.recycleDatabaseConnection(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction adminResetPassword(userId, password, success, error) {\n    _web_client2.default.adminResetPassword(userId, password, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction samlCertificateStatus(success, error) {\n    _web_client2.default.samlCertificateStatus(function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction ldapSyncNow(success, error) {\n    _web_client2.default.ldapSyncNow(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction getOAuthAppInfo(clientId, success, error) {\n    _web_client2.default.getOAuthAppInfo(clientId, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction allowOAuth2(params, success, error) {\n    var responseType = params.response_type;\n    var clientId = params.client_id;\n    var redirectUri = params.redirect_uri;\n    var state = params.state;\n    var scope = params.scope;\n\n    _web_client2.default.allowOAuth2(responseType, clientId, redirectUri, state, scope, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction emailToLdap(loginId, password, token, ldapId, ldapPassword, success, error) {\n    _web_client2.default.emailToLdap(loginId, password, token, ldapId, ldapPassword, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction emailToOAuth(loginId, password, token, newType, success, error) {\n    _web_client2.default.emailToOAuth(loginId, password, token, newType, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction oauthToEmail(email, password, success, error) {\n    _web_client2.default.oauthToEmail(email, password, function (data) {\n        if (data.follow_link) {\n            _es.browserHistory.push(data.follow_link);\n        }\n\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction regenerateOAuthAppSecret(oauthAppId, success, error) {\n    _web_client2.default.regenerateOAuthAppSecret(oauthAppId, function (data) {\n        if (success) {\n            success(data);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction uploadBrandImage(brandImage, success, error) {\n    _web_client2.default.uploadBrandImage(brandImage, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction uploadLicenseFile(file, success, error) {\n    _web_client2.default.uploadLicenseFile(file, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction removeLicenseFile(success, error) {\n    _web_client2.default.removeLicenseFile(function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction uploadCertificateFile(certificateFile, success, error) {\n    _web_client2.default.uploadCertificateFile(certificateFile, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction removeCertificateFile(certificateId, success, error) {\n    _web_client2.default.removeCertificateFile(certificateId, function () {\n        if (success) {\n            success();\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\n/***/ }),\n\n/***/ 1785:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _utils = __webpack_require__(28);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _reactIntl = __webpack_require__(197);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar LoginMfa = function (_React$Component) {\n    (0, _inherits3.default)(LoginMfa, _React$Component);\n\n    function LoginMfa(props) {\n        (0, _classCallCheck3.default)(this, LoginMfa);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (LoginMfa.__proto__ || (0, _getPrototypeOf2.default)(LoginMfa)).call(this, props));\n\n        _this.handleSubmit = _this.handleSubmit.bind(_this);\n\n        _this.state = {\n            serverError: ''\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(LoginMfa, [{\n        key: 'handleSubmit',\n        value: function handleSubmit(e) {\n            e.preventDefault();\n            var state = {};\n\n            var token = this.refs.token.value.trim().replace(/\\s/g, '');\n            if (!token) {\n                state.serverError = Utils.localizeMessage('login_mfa.tokenReq', 'Please enter an MFA token');\n                this.setState(state);\n                return;\n            }\n\n            state.serverError = '';\n            this.setState(state);\n\n            this.props.submit(this.props.loginId, this.props.password, token);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var serverError = void 0;\n            var errorClass = '';\n            if (this.state.serverError) {\n                serverError = _react2.default.createElement(\n                    'label',\n                    { className: 'control-label' },\n                    this.state.serverError\n                );\n                errorClass = ' has-error';\n            }\n\n            return _react2.default.createElement(\n                'form',\n                { onSubmit: this.handleSubmit },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'signup__email-container' },\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'login_mfa.enterToken',\n                            defaultMessage: 'To complete the sign in process, please enter a token from your smartphone\\'s authenticator'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'form-group' + errorClass },\n                        serverError\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'form-group' + errorClass },\n                        _react2.default.createElement('input', {\n                            type: 'text',\n                            className: 'form-control',\n                            name: 'token',\n                            ref: 'token',\n                            placeholder: Utils.localizeMessage('login_mfa.token', 'MFA Token'),\n                            spellCheck: 'false',\n                            autoComplete: 'off',\n                            autoFocus: true\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'form-group' },\n                        _react2.default.createElement(\n                            'button',\n                            {\n                                type: 'submit',\n                                className: 'btn btn-primary'\n                            },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'login_mfa.submit',\n                                defaultMessage: 'Submit'\n                            })\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return LoginMfa;\n}(_react2.default.Component);\n\nexports.default = LoginMfa;\n\nLoginMfa.defaultProps = {};\n\nLoginMfa.propTypes = {\n    loginId: _propTypes2.default.string.isRequired,\n    password: _propTypes2.default.string.isRequired,\n    submit: _propTypes2.default.func.isRequired\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 44.0ebda67b57af0a64ab76.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport LoginMfa from 'components/login/components/login_mfa.jsx';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\n\nimport {checkMfa} from 'actions/user_actions.jsx';\nimport {emailToOAuth} from 'actions/admin_actions.jsx';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class EmailToOAuth extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.submit = this.submit.bind(this);\n        this.preSubmit = this.preSubmit.bind(this);\n\n        this.state = {showMfa: false, password: ''};\n    }\n\n    preSubmit(e) {\n        e.preventDefault();\n        var state = {};\n\n        var password = ReactDOM.findDOMNode(this.refs.password).value;\n        if (!password) {\n            state.error = Utils.localizeMessage('claim.email_to_oauth.pwdError', 'Please enter your password.');\n            this.setState(state);\n            return;\n        }\n\n        this.setState({password});\n\n        state.error = null;\n        this.setState(state);\n\n        checkMfa(\n            this.props.email,\n            (requiresMfa) => {\n                if (requiresMfa) {\n                    this.setState({showMfa: true});\n                } else {\n                    this.submit(this.props.email, password, '');\n                }\n            },\n            (err) => {\n                this.setState({error: err.message});\n            }\n        );\n    }\n\n    submit(loginId, password, token) {\n        emailToOAuth(\n            loginId,\n            password,\n            token,\n            this.props.newType,\n            (data) => {\n                if (data.follow_link) {\n                    window.location.href = data.follow_link;\n                }\n            },\n            (err) => {\n                this.setState({error: err.message, showMfa: false});\n            }\n        );\n    }\n\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        const type = (this.props.newType === Constants.SAML_SERVICE ? Constants.SAML_SERVICE.toUpperCase() : Utils.toTitleCase(this.props.newType));\n        const uiType = `${type} SSO`;\n\n        let content;\n        if (this.state.showMfa) {\n            content = (\n                <LoginMfa\n                    loginId={this.props.email}\n                    password={this.state.password}\n                    submit={this.submit}\n                />\n            );\n        } else {\n            content = (\n                <form onSubmit={this.preSubmit}>\n                    <p>\n                        <FormattedMessage\n                            id='claim.email_to_oauth.ssoType'\n                            defaultMessage='Upon claiming your account, you will only be able to login with {type} SSO'\n                            values={{\n                                type\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='claim.email_to_oauth.ssoNote'\n                            defaultMessage='You must already have a valid {type} account'\n                            values={{\n                                type\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='claim.email_to_oauth.enterPwd'\n                            defaultMessage='Enter the password for your {site} account'\n                            values={{\n                                site: global.window.mm_config.SiteName\n                            }}\n                        />\n                    </p>\n                    <div className={formClass}>\n                        <input\n                            type='password'\n                            className='form-control'\n                            name='password'\n                            ref='password'\n                            placeholder={Utils.localizeMessage('claim.email_to_oauth.pwd', 'Password')}\n                            spellCheck='false'\n                        />\n                    </div>\n                    {error}\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='claim.email_to_oauth.switchTo'\n                            defaultMessage='Switch account to {uiType}'\n                            values={{\n                                uiType\n                            }}\n                        />\n                    </button>\n                </form>\n            );\n        }\n\n        return (\n            <div>\n                <h3>\n                    <FormattedMessage\n                        id='claim.email_to_oauth.title'\n                        defaultMessage='Switch Email/Password Account to {uiType}'\n                        values={{\n                            uiType\n                        }}\n                    />\n                </h3>\n                {content}\n            </div>\n        );\n    }\n}\n\nEmailToOAuth.defaultProps = {\n};\nEmailToOAuth.propTypes = {\n    newType: PropTypes.string,\n    email: PropTypes.string\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/claim/components/email_to_oauth.jsx","// Copyright (c) 2017-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport Client from 'client/web_client.jsx';\nimport * as AsyncClient from 'utils/async_client.jsx';\nimport {browserHistory} from 'react-router/es6';\n\n// Redux actions\nimport store from 'stores/redux_store.jsx';\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nimport {getUser} from 'mattermost-redux/actions/users';\n\nexport function saveConfig(config, success, error) {\n    Client.saveConfig(\n        config,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function reloadConfig(success, error) {\n    Client.reloadConfig(\n        () => {\n            AsyncClient.getConfig();\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function adminResetMfa(userId, success, error) {\n    Client.adminResetMfa(\n        userId,\n        () => {\n            getUser(userId)(dispatch, getState);\n\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function getClusterStatus(success, error) {\n    Client.getClusterStatus(\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            AsyncClient.dispatchError(err, 'getClusterStatus');\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function saveComplianceReports(job, success, error) {\n    Client.saveComplianceReports(\n        job,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function testEmail(config, success, error) {\n    Client.testEmail(\n        config,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function ldapTest(success, error) {\n    Client.ldapTest(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function invalidateAllCaches(success, error) {\n    Client.invalidateAllCaches(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function recycleDatabaseConnection(success, error) {\n    Client.recycleDatabaseConnection(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function adminResetPassword(userId, password, success, error) {\n    Client.adminResetPassword(\n        userId,\n        password,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function samlCertificateStatus(success, error) {\n    Client.samlCertificateStatus(\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function ldapSyncNow(success, error) {\n    Client.ldapSyncNow(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function getOAuthAppInfo(clientId, success, error) {\n    Client.getOAuthAppInfo(\n        clientId,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function allowOAuth2(params, success, error) {\n    const responseType = params.response_type;\n    const clientId = params.client_id;\n    const redirectUri = params.redirect_uri;\n    const state = params.state;\n    const scope = params.scope;\n\n    Client.allowOAuth2(responseType, clientId, redirectUri, state, scope,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function emailToLdap(loginId, password, token, ldapId, ldapPassword, success, error) {\n    Client.emailToLdap(\n        loginId,\n        password,\n        token,\n        ldapId,\n        ldapPassword,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function emailToOAuth(loginId, password, token, newType, success, error) {\n    Client.emailToOAuth(\n        loginId,\n        password,\n        token,\n        newType,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function oauthToEmail(email, password, success, error) {\n    Client.oauthToEmail(\n        email,\n        password,\n        (data) => {\n            if (data.follow_link) {\n                browserHistory.push(data.follow_link);\n            }\n\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function regenerateOAuthAppSecret(oauthAppId, success, error) {\n    Client.regenerateOAuthAppSecret(\n        oauthAppId,\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function uploadBrandImage(brandImage, success, error) {\n    Client.uploadBrandImage(\n        brandImage,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function uploadLicenseFile(file, success, error) {\n    Client.uploadLicenseFile(\n        file,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function removeLicenseFile(success, error) {\n    Client.removeLicenseFile(\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function uploadCertificateFile(certificateFile, success, error) {\n    Client.uploadCertificateFile(\n        certificateFile,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function removeCertificateFile(certificateId, success, error) {\n    Client.removeCertificateFile(\n        certificateId,\n        () => {\n            if (success) {\n                success();\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./actions/admin_actions.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\n\nexport default class LoginMfa extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            serverError: ''\n        };\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const state = {};\n\n        const token = this.refs.token.value.trim().replace(/\\s/g, '');\n        if (!token) {\n            state.serverError = Utils.localizeMessage('login_mfa.tokenReq', 'Please enter an MFA token');\n            this.setState(state);\n            return;\n        }\n\n        state.serverError = '';\n        this.setState(state);\n\n        this.props.submit(this.props.loginId, this.props.password, token);\n    }\n\n    render() {\n        let serverError;\n        let errorClass = '';\n        if (this.state.serverError) {\n            serverError = <label className='control-label'>{this.state.serverError}</label>;\n            errorClass = ' has-error';\n        }\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className='signup__email-container'>\n                    <p>\n                        <FormattedMessage\n                            id='login_mfa.enterToken'\n                            defaultMessage=\"To complete the sign in process, please enter a token from your smartphone's authenticator\"\n                        />\n                    </p>\n                    <div className={'form-group' + errorClass}>\n                        {serverError}\n                    </div>\n                    <div className={'form-group' + errorClass}>\n                        <input\n                            type='text'\n                            className='form-control'\n                            name='token'\n                            ref='token'\n                            placeholder={Utils.localizeMessage('login_mfa.token', 'MFA Token')}\n                            spellCheck='false'\n                            autoComplete='off'\n                            autoFocus={true}\n                        />\n                    </div>\n                    <div className='form-group'>\n                        <button\n                            type='submit'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='login_mfa.submit'\n                                defaultMessage='Submit'\n                            />\n                        </button>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\nLoginMfa.defaultProps = {\n};\n\nLoginMfa.propTypes = {\n    loginId: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    submit: PropTypes.func.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/login/components/login_mfa.jsx"],"sourceRoot":""}