{"version":3,"sources":["webpack:///41.be4fd63e74028f21a3bb.js","webpack:///./components/signup/components/signup_ldap.jsx","webpack:///./components/form_error.jsx?437c*************","webpack:///./actions/team_actions.jsx?43c6*********","webpack:///./images/logo.png?3b88****"],"names":["webpackJsonp","1419","module","exports","__webpack_require__","global","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_createClass2","_createClass3","_inherits2","_inherits3","_form_error","_form_error2","_global_actions","GlobalActions","_team_actions","_user_actions","_diagnostics_actions","_utils","Utils","_propTypes","_propTypes2","_react","_react2","_reactIntl","_es","_logo","_logo2","SignupLdap","_React$Component","props","this","_this","__proto__","handleLdapSignup","bind","handleLdapSignupSuccess","handleLdapIdChange","handleLdapPasswordChange","state","ldapError","ldapId","ldapPassword","get","location","object","trackEvent","e","setState","target","_this2","preventDefault","webLoginByLdap","err","message","_this3","hash","query","h","data","d","inviteId","id","addUserToTeamFromInvite","finishSignup","_this4","loadMe","loadDefaultLocale","redirect_to","browserHistory","push","redirectUserToDefaultTeam","ldapIdPlaceholder","window","mm_config","LdapLoginFieldName","localizeMessage","errorClass","ldapSignup","EnableLdap","mm_license","IsLicensed","LDAP","createElement","className","FormattedMessage","defaultMessage","onSubmit","error","margin","name","placeholder","onChange","spellCheck","autoCapitalize","type","disabled","terms","FormattedHTMLMessage","values","siteName","SiteName","TermsOfServiceLink","PrivacyPolicyLink","description","CustomBrand","EnableCustomBrand","CustomDescriptionText","Link","to","src","Component","1522","_getIterator2","_getIterator3","FormError","apply","arguments","errors","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","return","node","bool","arrayOf","1640","checkIfTeamExists","teamName","onSuccess","onError","_teams","dispatch","getState","then","exists","serverError","requests","teams","getTeam","server_error_id","createTeam","team","rteam","updateTeam","removeUserFromTeam","teamId","userId","success","_users","getUser","getTeamStats","updateTeamMemberRoles","newRoles","updateTeamMember","_web_client2","member","team_id","user_id","entities","users","currentUserId","roles","delete_at","msg_count","mention_count","_reduxBatchedActions","batchActions","_action_types","TeamTypes","RECEIVED_TEAMS_LIST","RECEIVED_MY_TEAM_MEMBER","addUsersToTeam","userIds","teamMembers","addUserToTeam","getInviteInfo","inviteData","inviteMembers","invites","emails","forEach","i","email","sendEmailInvitesToTeam","_team_store2","getCurrentId","result","emailInvite","switchTeams","url","_channels","viewChannel","_channel_store2","getTeamsForUser","getTeams","getTeamMembersForUser","getTeamMembers","_extends2","_extends3","_team_store","_channel_store","_web_client","_redux_store","_redux_store2","1737","p"],"mappings":"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","file":"41.be4fd63e74028f21a3bb.js","sourcesContent":["webpackJsonp([41],{\n\n/***/ 1419:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _form_error = __webpack_require__(1522);\n\nvar _form_error2 = _interopRequireDefault(_form_error);\n\nvar _global_actions = __webpack_require__(93);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _team_actions = __webpack_require__(1640);\n\nvar _user_actions = __webpack_require__(114);\n\nvar _diagnostics_actions = __webpack_require__(204);\n\nvar _utils = __webpack_require__(28);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = __webpack_require__(197);\n\nvar _es = __webpack_require__(58);\n\nvar _logo = __webpack_require__(1737);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SignupLdap = function (_React$Component) {\n    (0, _inherits3.default)(SignupLdap, _React$Component);\n    (0, _createClass3.default)(SignupLdap, null, [{\n        key: 'propTypes',\n        get: function get() {\n            return {\n                location: _propTypes2.default.object\n            };\n        }\n    }]);\n\n    function SignupLdap(props) {\n        (0, _classCallCheck3.default)(this, SignupLdap);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SignupLdap.__proto__ || (0, _getPrototypeOf2.default)(SignupLdap)).call(this, props));\n\n        _this.handleLdapSignup = _this.handleLdapSignup.bind(_this);\n        _this.handleLdapSignupSuccess = _this.handleLdapSignupSuccess.bind(_this);\n\n        _this.handleLdapIdChange = _this.handleLdapIdChange.bind(_this);\n        _this.handleLdapPasswordChange = _this.handleLdapPasswordChange.bind(_this);\n\n        _this.state = {\n            ldapError: '',\n            ldapId: '',\n            ldapPassword: ''\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SignupLdap, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            (0, _diagnostics_actions.trackEvent)('signup', 'signup_user_01_welcome');\n        }\n    }, {\n        key: 'handleLdapIdChange',\n        value: function handleLdapIdChange(e) {\n            this.setState({\n                ldapId: e.target.value\n            });\n        }\n    }, {\n        key: 'handleLdapPasswordChange',\n        value: function handleLdapPasswordChange(e) {\n            this.setState({\n                ldapPassword: e.target.value\n            });\n        }\n    }, {\n        key: 'handleLdapSignup',\n        value: function handleLdapSignup(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            this.setState({ ldapError: '' });\n\n            (0, _user_actions.webLoginByLdap)(this.state.ldapId, this.state.ldapPassword, null, this.handleLdapSignupSuccess, function (err) {\n                _this2.setState({\n                    ldapError: err.message\n                });\n            });\n        }\n    }, {\n        key: 'handleLdapSignupSuccess',\n        value: function handleLdapSignupSuccess() {\n            var _this3 = this;\n\n            var hash = this.props.location.query.h;\n            var data = this.props.location.query.d;\n            var inviteId = this.props.location.query.id;\n\n            if (inviteId || hash) {\n                (0, _team_actions.addUserToTeamFromInvite)(data, hash, inviteId, function () {\n                    _this3.finishSignup();\n                }, function () {\n                    // there's not really a good way to deal with this, so just let the user log in like normal\n                    _this3.finishSignup();\n                });\n            } else {\n                this.finishSignup();\n            }\n        }\n    }, {\n        key: 'finishSignup',\n        value: function finishSignup() {\n            var _this4 = this;\n\n            (0, _user_actions.loadMe)(function () {\n                var query = _this4.props.location.query;\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    _es.browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var ldapIdPlaceholder = void 0;\n            if (global.window.mm_config.LdapLoginFieldName) {\n                ldapIdPlaceholder = global.window.mm_config.LdapLoginFieldName;\n            } else {\n                ldapIdPlaceholder = Utils.localizeMessage('login.ldapUsername', 'AD/LDAP Username');\n            }\n\n            var errorClass = '';\n            if (this.state.ldapError) {\n                errorClass += ' has-error';\n            }\n\n            var ldapSignup = void 0;\n            if (global.window.mm_config.EnableLdap === 'true' && global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.LDAP) {\n                ldapSignup = _react2.default.createElement(\n                    'div',\n                    { className: 'inner__content' },\n                    _react2.default.createElement(\n                        'h5',\n                        null,\n                        _react2.default.createElement(\n                            'strong',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.ldap',\n                                defaultMessage: 'AD/LDAP Credentials'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'form',\n                        {\n                            onSubmit: this.handleLdapSignup\n                        },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'signup__email-container' },\n                            _react2.default.createElement(_form_error2.default, {\n                                error: this.state.ldapError,\n                                margin: true\n                            }),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' + errorClass },\n                                _react2.default.createElement('input', {\n                                    className: 'form-control',\n                                    name: 'ldapId',\n                                    value: this.state.ldapId,\n                                    placeholder: ldapIdPlaceholder,\n                                    onChange: this.handleLdapIdChange,\n                                    spellCheck: 'false',\n                                    autoCapitalize: 'off'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' + errorClass },\n                                _react2.default.createElement('input', {\n                                    type: 'password',\n                                    className: 'form-control',\n                                    name: 'password',\n                                    value: this.state.ldapPassword,\n                                    placeholder: Utils.localizeMessage('login.password', 'Password'),\n                                    onChange: this.handleLdapPasswordChange,\n                                    spellCheck: 'false'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' },\n                                _react2.default.createElement(\n                                    'button',\n                                    {\n                                        type: 'submit',\n                                        className: 'btn btn-primary',\n                                        disabled: !this.state.ldapId || !this.state.ldapPassword\n                                    },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'login.signIn',\n                                        defaultMessage: 'Sign in'\n                                    })\n                                )\n                            )\n                        )\n                    )\n                );\n            } else {\n                return null;\n            }\n\n            var terms = null;\n            if (ldapSignup) {\n                terms = _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'create_team.agreement',\n                        defaultMessage: 'By proceeding to create your account and use {siteName}, you agree to our <a href=\\'{TermsOfServiceLink}\\'>Terms of Service</a> and <a href=\\'{PrivacyPolicyLink}\\'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.',\n                        values: {\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }\n                    })\n                );\n            }\n\n            var description = null;\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n                description = global.window.mm_config.CustomDescriptionText;\n            } else {\n                description = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'web.root.signup_info',\n                    defaultMessage: 'All team communication in one place, searchable and accessible anywhere'\n                });\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'div',\n                    { className: 'signup-header' },\n                    _react2.default.createElement(\n                        _es.Link,\n                        { to: '/' },\n                        _react2.default.createElement('span', { className: 'fa fa-chevron-left' }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'web.header.back'\n                        })\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container padding--less' },\n                        _react2.default.createElement('img', {\n                            className: 'signup-team-logo',\n                            src: _logo2.default\n                        }),\n                        _react2.default.createElement(\n                            'h1',\n                            null,\n                            global.window.mm_config.SiteName\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            description\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.lets',\n                                defaultMessage: 'Let\\'s create your account'\n                            })\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.haveAccount',\n                                defaultMessage: 'Already have an account?'\n                            }),\n                            ' ',\n                            _react2.default.createElement(\n                                _es.Link,\n                                {\n                                    to: '/login',\n                                    query: this.props.location.query\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.signIn',\n                                    defaultMessage: 'Click here to sign in.'\n                                })\n                            )\n                        ),\n                        ldapSignup,\n                        terms\n                    )\n                )\n            );\n        }\n    }]);\n    return SignupLdap;\n}(_react2.default.Component); // Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = SignupLdap;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))\n\n/***/ }),\n\n/***/ 1522:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getIterator2 = __webpack_require__(77);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FormError = function (_React$Component) {\n    (0, _inherits3.default)(FormError, _React$Component);\n\n    function FormError() {\n        (0, _classCallCheck3.default)(this, FormError);\n        return (0, _possibleConstructorReturn3.default)(this, (FormError.__proto__ || (0, _getPrototypeOf2.default)(FormError)).apply(this, arguments));\n    }\n\n    (0, _createClass3.default)(FormError, [{\n        key: 'render',\n        value: function render() {\n            if (!this.props.error && this.props.errors.length === 0) {\n                return null;\n            }\n\n            // look for the first truthy error to display\n            var message = this.props.error;\n\n            if (!message) {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = (0, _getIterator3.default)(this.props.errors), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var error = _step.value;\n\n                        if (error) {\n                            message = error;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n\n            if (!message) {\n                return null;\n            }\n\n            if (this.props.type === 'backstage') {\n                return _react2.default.createElement(\n                    'div',\n                    { className: 'pull-left has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        message\n                    )\n                );\n            }\n\n            if (this.props.margin) {\n                return _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        message\n                    )\n                );\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'col-sm-12 has-error' },\n                _react2.default.createElement(\n                    'label',\n                    { className: 'control-label' },\n                    message\n                )\n            );\n        }\n    }], [{\n        key: 'propTypes',\n        get: function get() {\n            // accepts either a single error or an array of errors\n            return {\n                type: _propTypes2.default.node,\n                error: _propTypes2.default.node,\n                margin: _propTypes2.default.bool,\n                errors: _propTypes2.default.arrayOf(_propTypes2.default.node)\n            };\n        }\n    }, {\n        key: 'defaultProps',\n        get: function get() {\n            return {\n                error: null,\n                errors: []\n            };\n        }\n    }]);\n    return FormError;\n}(_react2.default.Component);\n\n// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = FormError;\n\n/***/ }),\n\n/***/ 1640:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(112);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.checkIfTeamExists = checkIfTeamExists;\nexports.createTeam = createTeam;\nexports.updateTeam = updateTeam;\nexports.removeUserFromTeam = removeUserFromTeam;\nexports.updateTeamMemberRoles = updateTeamMemberRoles;\nexports.addUserToTeamFromInvite = addUserToTeamFromInvite;\nexports.addUsersToTeam = addUsersToTeam;\nexports.getInviteInfo = getInviteInfo;\nexports.inviteMembers = inviteMembers;\nexports.switchTeams = switchTeams;\nexports.getTeamsForUser = getTeamsForUser;\nexports.getTeamMembersForUser = getTeamMembersForUser;\n\nvar _team_store = __webpack_require__(43);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _channel_store = __webpack_require__(29);\n\nvar _channel_store2 = _interopRequireDefault(_channel_store);\n\nvar _web_client = __webpack_require__(52);\n\nvar _web_client2 = _interopRequireDefault(_web_client);\n\nvar _es = __webpack_require__(58);\n\nvar _redux_store = __webpack_require__(36);\n\nvar _redux_store2 = _interopRequireDefault(_redux_store);\n\nvar _users = __webpack_require__(115);\n\nvar _channels = __webpack_require__(79);\n\nvar _teams = __webpack_require__(200);\n\nvar _action_types = __webpack_require__(4);\n\nvar _reduxBatchedActions = __webpack_require__(81);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dispatch = _redux_store2.default.dispatch;\n\n// Redux actions\n// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar getState = _redux_store2.default.getState;\n\nfunction checkIfTeamExists(teamName, onSuccess, onError) {\n    (0, _teams.checkIfTeamExists)(teamName)(dispatch, getState).then(function (exists) {\n        if (exists != null && onSuccess) {\n            onSuccess(exists);\n        } else if (exists == null && onError) {\n            var serverError = getState().requests.teams.getTeam.error;\n            onError((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction createTeam(team, onSuccess, onError) {\n    (0, _teams.createTeam)(team)(dispatch, getState).then(function (rteam) {\n        if (rteam && onSuccess) {\n            _es.browserHistory.push('/' + rteam.name + '/channels/town-square');\n            onSuccess(rteam);\n        } else if (rteam == null && onError) {\n            var serverError = getState().requests.teams.createTeam.error;\n            onError((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction updateTeam(team, onSuccess, onError) {\n    (0, _teams.updateTeam)(team)(dispatch, getState).then(function (rteam) {\n        if (rteam && onSuccess) {\n            _es.browserHistory.push('/' + rteam.name + '/channels/town-square');\n            onSuccess(rteam);\n        } else if (rteam == null && onError) {\n            var serverError = getState().requests.teams.updateTeam.error;\n            onError((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction removeUserFromTeam(teamId, userId, success, error) {\n    (0, _teams.removeUserFromTeam)(teamId, userId)(dispatch, getState).then(function (data) {\n        (0, _users.getUser)(userId)(dispatch, getState);\n        (0, _teams.getTeamStats)(teamId)(dispatch, getState);\n\n        if (data && success) {\n            success();\n        } else if (data == null && error) {\n            var serverError = getState().requests.teams.removeUserFromTeam.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction updateTeamMemberRoles(teamId, userId, newRoles, success, error) {\n    (0, _teams.updateTeamMemberRoles)(teamId, userId, newRoles)(dispatch, getState).then(function (data) {\n        if (data && success) {\n            success();\n        } else if (data == null && error) {\n            var serverError = getState().requests.teams.updateTeamMember.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction addUserToTeamFromInvite(data, hash, inviteId, success, error) {\n    _web_client2.default.addUserToTeamFromInvite(data, hash, inviteId, function (team) {\n        var member = {\n            team_id: team.id,\n            user_id: getState().entities.users.currentUserId,\n            roles: 'team_user',\n            delete_at: 0,\n            msg_count: 0,\n            mention_count: 0\n        };\n\n        dispatch((0, _reduxBatchedActions.batchActions)([{\n            type: _action_types.TeamTypes.RECEIVED_TEAMS_LIST,\n            data: [team]\n        }, {\n            type: _action_types.TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n            data: member\n        }]));\n\n        if (success) {\n            success(team);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction addUsersToTeam(teamId, userIds, success, error) {\n    (0, _teams.addUsersToTeam)(teamId, userIds)(dispatch, getState).then(function (teamMembers) {\n        if (teamMembers && success) {\n            success(teamMembers);\n        } else if (teamMembers == null && error) {\n            var serverError = getState().requests.teams.addUserToTeam.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction getInviteInfo(inviteId, success, error) {\n    _web_client2.default.getInviteInfo(inviteId, function (inviteData) {\n        if (success) {\n            success(inviteData);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction inviteMembers(data, success, error) {\n    if (!data.invites) {\n        success();\n    }\n    var emails = [];\n    data.invites.forEach(function (i) {\n        emails.push(i.email);\n    });\n    (0, _teams.sendEmailInvitesToTeam)(_team_store2.default.getCurrentId(), emails)(dispatch, getState).then(function (result) {\n        if (result && success) {\n            success();\n        } else if (result == null && error) {\n            var serverError = getState().requests.teams.emailInvite.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction switchTeams(url) {\n    (0, _channels.viewChannel)(_channel_store2.default.getCurrentId())(dispatch, getState);\n    _es.browserHistory.push(url);\n}\n\nfunction getTeamsForUser(userId, success, error) {\n    (0, _teams.getTeamsForUser)(userId)(dispatch, getState).then(function (result) {\n        if (result && success) {\n            success(result);\n        } else if (result == null && error) {\n            var serverError = getState().requests.teams.getTeams.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction getTeamMembersForUser(userId, success, error) {\n    (0, _teams.getTeamMembersForUser)(userId)(dispatch, getState).then(function (result) {\n        if (result && success) {\n            success(result);\n        } else if (result == null && error) {\n            var serverError = getState().requests.teams.getTeamMembers.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\n/***/ }),\n\n/***/ 1737:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 41.be4fd63e74028f21a3bb.js","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport FormError from 'components/form_error.jsx';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite} from 'actions/team_actions.jsx';\nimport {loadMe, webLoginByLdap} from 'actions/user_actions.jsx';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\nimport {browserHistory, Link} from 'react-router/es6';\n\nimport logoImage from 'images/logo.png';\n\nexport default class SignupLdap extends React.Component {\n    static get propTypes() {\n        return {\n            location: PropTypes.object\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleLdapSignup = this.handleLdapSignup.bind(this);\n        this.handleLdapSignupSuccess = this.handleLdapSignupSuccess.bind(this);\n\n        this.handleLdapIdChange = this.handleLdapIdChange.bind(this);\n        this.handleLdapPasswordChange = this.handleLdapPasswordChange.bind(this);\n\n        this.state = ({\n            ldapError: '',\n            ldapId: '',\n            ldapPassword: ''\n        });\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_user_01_welcome');\n    }\n\n    handleLdapIdChange(e) {\n        this.setState({\n            ldapId: e.target.value\n        });\n    }\n\n    handleLdapPasswordChange(e) {\n        this.setState({\n            ldapPassword: e.target.value\n        });\n    }\n\n    handleLdapSignup(e) {\n        e.preventDefault();\n\n        this.setState({ldapError: ''});\n\n        webLoginByLdap(\n            this.state.ldapId,\n            this.state.ldapPassword,\n            null,\n            this.handleLdapSignupSuccess,\n            (err) => {\n                this.setState({\n                    ldapError: err.message\n                });\n            }\n        );\n    }\n\n    handleLdapSignupSuccess() {\n        const hash = this.props.location.query.h;\n        const data = this.props.location.query.d;\n        const inviteId = this.props.location.query.id;\n\n        if (inviteId || hash) {\n            addUserToTeamFromInvite(\n                data,\n                hash,\n                inviteId,\n                () => {\n                    this.finishSignup();\n                },\n                () => {\n                    // there's not really a good way to deal with this, so just let the user log in like normal\n                    this.finishSignup();\n                }\n            );\n        } else {\n            this.finishSignup();\n        }\n    }\n\n    finishSignup() {\n        loadMe(\n            () => {\n                const query = this.props.location.query;\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        );\n    }\n\n    render() {\n        let ldapIdPlaceholder;\n        if (global.window.mm_config.LdapLoginFieldName) {\n            ldapIdPlaceholder = global.window.mm_config.LdapLoginFieldName;\n        } else {\n            ldapIdPlaceholder = Utils.localizeMessage('login.ldapUsername', 'AD/LDAP Username');\n        }\n\n        let errorClass = '';\n        if (this.state.ldapError) {\n            errorClass += ' has-error';\n        }\n\n        let ldapSignup;\n        if (global.window.mm_config.EnableLdap === 'true' && global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.LDAP) {\n            ldapSignup = (\n                <div className='inner__content'>\n                    <h5>\n                        <strong>\n                            <FormattedMessage\n                                id='signup.ldap'\n                                defaultMessage='AD/LDAP Credentials'\n                            />\n                        </strong>\n                    </h5>\n                    <form\n                        onSubmit={this.handleLdapSignup}\n                    >\n                        <div className='signup__email-container'>\n                            <FormError\n                                error={this.state.ldapError}\n                                margin={true}\n                            />\n                            <div className={'form-group' + errorClass}>\n                                <input\n                                    className='form-control'\n                                    name='ldapId'\n                                    value={this.state.ldapId}\n                                    placeholder={ldapIdPlaceholder}\n                                    onChange={this.handleLdapIdChange}\n                                    spellCheck='false'\n                                    autoCapitalize='off'\n                                />\n                            </div>\n                            <div className={'form-group' + errorClass}>\n                                <input\n                                    type='password'\n                                    className='form-control'\n                                    name='password'\n                                    value={this.state.ldapPassword}\n                                    placeholder={Utils.localizeMessage('login.password', 'Password')}\n                                    onChange={this.handleLdapPasswordChange}\n                                    spellCheck='false'\n                                />\n                            </div>\n                            <div className='form-group'>\n                                <button\n                                    type='submit'\n                                    className='btn btn-primary'\n                                    disabled={!this.state.ldapId || !this.state.ldapPassword}\n                                >\n                                    <FormattedMessage\n                                        id='login.signIn'\n                                        defaultMessage='Sign in'\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            );\n        } else {\n            return null;\n        }\n\n        let terms = null;\n        if (ldapSignup) {\n            terms = (\n                <p>\n                    <FormattedHTMLMessage\n                        id='create_team.agreement'\n                        defaultMessage=\"By proceeding to create your account and use {siteName}, you agree to our <a href='{TermsOfServiceLink}'>Terms of Service</a> and <a href='{PrivacyPolicyLink}'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.\"\n                        values={{\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        let description = null;\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n            description = global.window.mm_config.CustomDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <div className='signup-header'>\n                    <Link to='/'>\n                        <span className='fa fa-chevron-left'/>\n                        <FormattedMessage\n                            id='web.header.back'\n                        />\n                    </Link>\n                </div>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container padding--less'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <h1>{global.window.mm_config.SiteName}</h1>\n                        <h4 className='color--light'>\n                            {description}\n                        </h4>\n                        <h4 className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.lets'\n                                defaultMessage=\"Let's create your account\"\n                            />\n                        </h4>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={'/login'}\n                                query={this.props.location.query}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                        {ldapSignup}\n                        {terms}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/signup/components/signup_ldap.jsx","import PropTypes from 'prop-types';\n\n// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport React from 'react';\n\nexport default class FormError extends React.Component {\n    static get propTypes() {\n        // accepts either a single error or an array of errors\n        return {\n            type: PropTypes.node,\n            error: PropTypes.node,\n            margin: PropTypes.bool,\n            errors: PropTypes.arrayOf(PropTypes.node)\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            error: null,\n            errors: []\n        };\n    }\n\n    render() {\n        if (!this.props.error && this.props.errors.length === 0) {\n            return null;\n        }\n\n        // look for the first truthy error to display\n        let message = this.props.error;\n\n        if (!message) {\n            for (const error of this.props.errors) {\n                if (error) {\n                    message = error;\n                }\n            }\n        }\n\n        if (!message) {\n            return null;\n        }\n\n        if (this.props.type === 'backstage') {\n            return (\n                <div className='pull-left has-error'>\n                    <label className='control-label'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        if (this.props.margin) {\n            return (\n                <div className='form-group has-error'>\n                    <label className='control-label'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div className='col-sm-12 has-error'>\n                <label className='control-label'>\n                    {message}\n                </label>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/form_error.jsx","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport TeamStore from 'stores/team_store.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\n\nimport Client from 'client/web_client.jsx';\n\nimport {browserHistory} from 'react-router/es6';\n\n// Redux actions\nimport store from 'stores/redux_store.jsx';\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nimport {getUser} from 'mattermost-redux/actions/users';\nimport {viewChannel} from 'mattermost-redux/actions/channels';\nimport {\n    createTeam as createTeamRedux,\n    updateTeam as updateTeamRedux,\n    removeUserFromTeam as removeUserFromTeamRedux,\n    getTeamStats,\n    checkIfTeamExists as checkIfTeamExistsRedux,\n    updateTeamMemberRoles as updateTeamMemberRolesRedux,\n    addUsersToTeam as addUsersToTeamRedux,\n    sendEmailInvitesToTeam,\n    getTeamsForUser as getTeamsForUserRedux,\n    getTeamMembersForUser as getTeamMembersForUserRedux\n} from 'mattermost-redux/actions/teams';\n\nimport {TeamTypes} from 'mattermost-redux/action_types';\nimport {batchActions} from 'redux-batched-actions';\n\nexport function checkIfTeamExists(teamName, onSuccess, onError) {\n    checkIfTeamExistsRedux(teamName)(dispatch, getState).then(\n        (exists) => {\n            if (exists != null && onSuccess) {\n                onSuccess(exists);\n            } else if (exists == null && onError) {\n                const serverError = getState().requests.teams.getTeam.error;\n                onError({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function createTeam(team, onSuccess, onError) {\n    createTeamRedux(team)(dispatch, getState).then(\n        (rteam) => {\n            if (rteam && onSuccess) {\n                browserHistory.push('/' + rteam.name + '/channels/town-square');\n                onSuccess(rteam);\n            } else if (rteam == null && onError) {\n                const serverError = getState().requests.teams.createTeam.error;\n                onError({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function updateTeam(team, onSuccess, onError) {\n    updateTeamRedux(team)(dispatch, getState).then(\n        (rteam) => {\n            if (rteam && onSuccess) {\n                browserHistory.push('/' + rteam.name + '/channels/town-square');\n                onSuccess(rteam);\n            } else if (rteam == null && onError) {\n                const serverError = getState().requests.teams.updateTeam.error;\n                onError({id: serverError.server_error_id, ...serverError});\n            }\n        },\n    );\n}\n\nexport function removeUserFromTeam(teamId, userId, success, error) {\n    removeUserFromTeamRedux(teamId, userId)(dispatch, getState).then(\n        (data) => {\n            getUser(userId)(dispatch, getState);\n            getTeamStats(teamId)(dispatch, getState);\n\n            if (data && success) {\n                success();\n            } else if (data == null && error) {\n                const serverError = getState().requests.teams.removeUserFromTeam.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        },\n    );\n}\n\nexport function updateTeamMemberRoles(teamId, userId, newRoles, success, error) {\n    updateTeamMemberRolesRedux(teamId, userId, newRoles)(dispatch, getState).then(\n        (data) => {\n            if (data && success) {\n                success();\n            } else if (data == null && error) {\n                const serverError = getState().requests.teams.updateTeamMember.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function addUserToTeamFromInvite(data, hash, inviteId, success, error) {\n    Client.addUserToTeamFromInvite(\n        data,\n        hash,\n        inviteId,\n        (team) => {\n            const member = {\n                team_id: team.id,\n                user_id: getState().entities.users.currentUserId,\n                roles: 'team_user',\n                delete_at: 0,\n                msg_count: 0,\n                mention_count: 0\n            };\n\n            dispatch(batchActions([\n                {\n                    type: TeamTypes.RECEIVED_TEAMS_LIST,\n                    data: [team]\n                },\n                {\n                    type: TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n                    data: member\n                }\n            ]));\n\n            if (success) {\n                success(team);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function addUsersToTeam(teamId, userIds, success, error) {\n    addUsersToTeamRedux(teamId, userIds)(dispatch, getState).then(\n        (teamMembers) => {\n            if (teamMembers && success) {\n                success(teamMembers);\n            } else if (teamMembers == null && error) {\n                const serverError = getState().requests.teams.addUserToTeam.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function getInviteInfo(inviteId, success, error) {\n    Client.getInviteInfo(\n        inviteId,\n        (inviteData) => {\n            if (success) {\n                success(inviteData);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function inviteMembers(data, success, error) {\n    if (!data.invites) {\n        success();\n    }\n    const emails = [];\n    data.invites.forEach((i) => {\n        emails.push(i.email);\n    });\n    sendEmailInvitesToTeam(TeamStore.getCurrentId(), emails)(dispatch, getState).then(\n        (result) => {\n            if (result && success) {\n                success();\n            } else if (result == null && error) {\n                const serverError = getState().requests.teams.emailInvite.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function switchTeams(url) {\n    viewChannel(ChannelStore.getCurrentId())(dispatch, getState);\n    browserHistory.push(url);\n}\n\nexport function getTeamsForUser(userId, success, error) {\n    getTeamsForUserRedux(userId)(dispatch, getState).then(\n        (result) => {\n            if (result && success) {\n                success(result);\n            } else if (result == null && error) {\n                const serverError = getState().requests.teams.getTeams.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function getTeamMembersForUser(userId, success, error) {\n    getTeamMembersForUserRedux(userId)(dispatch, getState).then(\n        (result) => {\n            if (result && success) {\n                success(result);\n            } else if (result == null && error) {\n                const serverError = getState().requests.teams.getTeamMembers.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./actions/team_actions.jsx","module.exports = __webpack_public_path__ + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./images/logo.png\n// module id = 1737\n// module chunks = 11 18 19 27 40 41 47 49 51"],"sourceRoot":""}