{"version":3,"sources":["webpack:///55.150308a21c7134b34bf4.js","webpack:///./components/password_reset_send_link.jsx"],"names":["webpackJsonp","1414","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_jquery","_jquery2","_reactDom","_reactDom2","_utils","Utils","newObj","key","prototype","hasOwnProperty","call","_web_client","_web_client2","_reactIntl","_propTypes","_propTypes2","_react","_react2","_es","PasswordResetSendLink","_React$Component","props","this","_this","__proto__","handleSendLink","bind","state","error","updateText","e","_this2","preventDefault","email","findDOMNode","refs","trim","toLowerCase","isEmail","setState","createElement","FormattedMessage","id","defaultMessage","sendPasswordReset","className","FormattedHTMLMessage","values","reset_form","hide","err","message","update_text","formClass","Link","to","onSubmit","ref","type","name","placeholder","localizeMessage","spellCheck","Component","defaultProps","propTypes","params","object","isRequired"],"mappings":"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","file":"55.150308a21c7134b34bf4.js","sourcesContent":["webpackJsonp([55],{\n\n/***/ 1414:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _reactDom = __webpack_require__(483);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _utils = __webpack_require__(28);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _web_client = __webpack_require__(52);\n\nvar _web_client2 = _interopRequireDefault(_web_client);\n\nvar _reactIntl = __webpack_require__(197);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _es = __webpack_require__(58);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar PasswordResetSendLink = function (_React$Component) {\n    (0, _inherits3.default)(PasswordResetSendLink, _React$Component);\n\n    function PasswordResetSendLink(props) {\n        (0, _classCallCheck3.default)(this, PasswordResetSendLink);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (PasswordResetSendLink.__proto__ || (0, _getPrototypeOf2.default)(PasswordResetSendLink)).call(this, props));\n\n        _this.handleSendLink = _this.handleSendLink.bind(_this);\n\n        _this.state = {\n            error: '',\n            updateText: ''\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(PasswordResetSendLink, [{\n        key: 'handleSendLink',\n        value: function handleSendLink(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            var email = _reactDom2.default.findDOMNode(this.refs.email).value.trim().toLowerCase();\n            if (!email || !Utils.isEmail(email)) {\n                this.setState({\n                    error: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'password_send.error',\n                        defaultMessage: 'Please enter a valid email address.'\n                    })\n                });\n                return;\n            }\n\n            // End of error checking clear error\n            this.setState({\n                error: ''\n            });\n\n            _web_client2.default.sendPasswordReset(email, function () {\n                _this2.setState({\n                    error: null,\n                    updateText: _react2.default.createElement(\n                        'div',\n                        { className: 'reset-form alert alert-success' },\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'password_send.link',\n                            defaultMessage: 'If the account exists, a password reset email will be sent to: <br/><b>{email}</b><br/><br/>',\n                            values: {\n                                email: email\n                            }\n                        }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'password_send.checkInbox',\n                            defaultMessage: 'Please check your inbox.'\n                        })\n                    )\n                });\n                (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this2.refs.reset_form)).hide();\n            }, function (err) {\n                _this2.setState({\n                    error: err.message,\n                    update_text: null\n                });\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var error = null;\n            if (this.state.error) {\n                error = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.error\n                    )\n                );\n            }\n\n            var formClass = 'form-group';\n            if (error) {\n                formClass += ' has-error';\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'div',\n                    { className: 'signup-header' },\n                    _react2.default.createElement(\n                        _es.Link,\n                        { to: '/' },\n                        _react2.default.createElement('span', { className: 'fa fa-chevron-left' }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'web.header.back'\n                        })\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container' },\n                        _react2.default.createElement(\n                            'h3',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'password_send.title',\n                                defaultMessage: 'Password Reset'\n                            })\n                        ),\n                        this.state.updateText,\n                        _react2.default.createElement(\n                            'form',\n                            {\n                                onSubmit: this.handleSendLink,\n                                ref: 'reset_form'\n                            },\n                            _react2.default.createElement(\n                                'p',\n                                null,\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'password_send.description',\n                                    defaultMessage: 'To reset your password, enter the email address you used to sign up'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: formClass },\n                                _react2.default.createElement('input', {\n                                    type: 'email',\n                                    className: 'form-control',\n                                    name: 'email',\n                                    ref: 'email',\n                                    placeholder: Utils.localizeMessage('password_send.email', 'Email'),\n                                    spellCheck: 'false'\n                                })\n                            ),\n                            error,\n                            _react2.default.createElement(\n                                'button',\n                                {\n                                    type: 'submit',\n                                    className: 'btn btn-primary'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'password_send.reset',\n                                    defaultMessage: 'Reset my password'\n                                })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return PasswordResetSendLink;\n}(_react2.default.Component);\n\nPasswordResetSendLink.defaultProps = {};\nPasswordResetSendLink.propTypes = {\n    params: _propTypes2.default.object.isRequired\n};\n\nexports.default = PasswordResetSendLink;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 55.150308a21c7134b34bf4.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\nimport * as Utils from 'utils/utils.jsx';\nimport client from 'client/web_client.jsx';\n\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport {Link} from 'react-router/es6';\n\nclass PasswordResetSendLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSendLink = this.handleSendLink.bind(this);\n\n        this.state = {\n            error: '',\n            updateText: ''\n        };\n    }\n    handleSendLink(e) {\n        e.preventDefault();\n\n        var email = ReactDOM.findDOMNode(this.refs.email).value.trim().toLowerCase();\n        if (!email || !Utils.isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id={'password_send.error'}\n                        defaultMessage={'Please enter a valid email address.'}\n                    />\n                )\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({\n            error: ''\n        });\n\n        client.sendPasswordReset(\n            email,\n            () => {\n                this.setState({\n                    error: null,\n                    updateText: (\n                        <div className='reset-form alert alert-success'>\n                            <FormattedHTMLMessage\n                                id='password_send.link'\n                                defaultMessage='If the account exists, a password reset email will be sent to: <br/><b>{email}</b><br/><br/>'\n                                values={{\n                                    email\n                                }}\n                            />\n                            <FormattedMessage\n                                id='password_send.checkInbox'\n                                defaultMessage='Please check your inbox.'\n                            />\n                        </div>\n                    )\n                });\n                $(ReactDOM.findDOMNode(this.refs.reset_form)).hide();\n            },\n            (err) => {\n                this.setState({\n                    error: err.message,\n                    update_text: null\n                });\n            }\n        );\n    }\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <div className='signup-header'>\n                    <Link to='/'>\n                        <span className='fa fa-chevron-left'/>\n                        <FormattedMessage\n                            id='web.header.back'\n                        />\n                    </Link>\n                </div>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='password_send.title'\n                                defaultMessage='Password Reset'\n                            />\n                        </h3>\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref='reset_form'\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <input\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    ref='email'\n                                    placeholder={Utils.localizeMessage(\n                                        'password_send.email',\n                                        'Email'\n                                    )}\n                                    spellCheck='false'\n                                />\n                            </div>\n                            {error}\n                            <button\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPasswordResetSendLink.defaultProps = {\n};\nPasswordResetSendLink.propTypes = {\n    params: PropTypes.object.isRequired\n};\n\nexport default PasswordResetSendLink;\n\n\n\n// WEBPACK FOOTER //\n// ./components/password_reset_send_link.jsx"],"sourceRoot":""}