{"version":3,"sources":["webpack:///40.e6f70a151bd223c92f3c.js","webpack:///./components/signup/components/signup_email.jsx","webpack:///./components/loading_screen.jsx?28c5************","webpack:///./actions/team_actions.jsx?43c6********","webpack:///./images/logo.png?3b88***"],"names":["webpackJsonp","1418","module","exports","__webpack_require__","global","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","defineProperty","value","_stringify","_stringify2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_createClass2","_createClass3","_inherits2","_inherits3","_loading_screen","_loading_screen2","_global_actions","GlobalActions","_diagnostics_actions","_browser_store","_browser_store2","_team_actions","_user_actions","_utils","Utils","_constants","_constants2","_propTypes","_propTypes2","_react","_react2","_reactIntl","_es","_logo","_logo2","SignupEmail","_React$Component","props","this","_this","__proto__","handleSubmit","bind","getInviteInfo","renderEmailSignup","isUserValid","state","get","location","object","trackEvent","data","query","d","hash","h","inviteId","id","email","teamDisplayName","teamName","teamId","loading","serverError","noOpenServerError","length","parsedData","JSON","parse","display_name","name","inviteData","createElement","FormattedMessage","defaultMessage","_this2","loadMe","loadDefaultLocale","redirect_to","browserHistory","push","redirectUserToDefaultTeam","user","_this3","loginById","password","setGlobalItem","usedBefore","err","encodeURIComponent","setState","message","providedEmail","refs","trim","nameError","emailError","passwordError","isEmail","providedUsername","toLowerCase","usernameError","isValidUsername","values","min","MIN_USERNAME_LENGTH","max","MAX_USERNAME_LENGTH","providedPassword","pwdError","isValidPassword","e","_this4","preventDefault","username","allow_marketing","createUserWithInvite","handleSignupSuccess","emailHelpText","className","emailDivStyle","nameHelpText","nameDivStyle","passwordDivStyle","yourEmailIs","FormattedHTMLMessage","siteName","window","mm_config","SiteName","emailContainerStyle","type","ref","defaultValue","placeholder","maxLength","autoFocus","spellCheck","autoCapitalize","onClick","emailSignup","EnableSignUpWithEmail","terms","TermsOfServiceLink","PrivacyPolicyLink","description","mm_license","IsLicensed","CustomBrand","EnableCustomBrand","CustomDescriptionText","Link","to","src","Component","1509","LoadingScreen","style","position","defaultProps","propTypes","oneOf","node","1640","checkIfTeamExists","onSuccess","onError","_teams","dispatch","getState","then","exists","requests","teams","getTeam","error","server_error_id","createTeam","team","rteam","updateTeam","removeUserFromTeam","userId","success","_users","getUser","getTeamStats","updateTeamMemberRoles","newRoles","updateTeamMember","addUserToTeamFromInvite","_web_client2","member","team_id","user_id","entities","users","currentUserId","roles","delete_at","msg_count","mention_count","_reduxBatchedActions","batchActions","_action_types","TeamTypes","RECEIVED_TEAMS_LIST","RECEIVED_MY_TEAM_MEMBER","addUsersToTeam","userIds","teamMembers","addUserToTeam","inviteMembers","invites","emails","forEach","i","sendEmailInvitesToTeam","_team_store2","getCurrentId","result","emailInvite","switchTeams","url","_channels","viewChannel","_channel_store2","getTeamsForUser","getTeams","getTeamMembersForUser","getTeamMembers","_extends2","_extends3","_team_store","_channel_store","_web_client","_redux_store","_redux_store2","1737","p"],"mappings":"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","file":"40.e6f70a151bd223c92f3c.js","sourcesContent":["webpackJsonp([40],{\n\n/***/ 1418:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _stringify = __webpack_require__(94);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _loading_screen = __webpack_require__(1509);\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nvar _global_actions = __webpack_require__(93);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _diagnostics_actions = __webpack_require__(204);\n\nvar _browser_store = __webpack_require__(82);\n\nvar _browser_store2 = _interopRequireDefault(_browser_store);\n\nvar _team_actions = __webpack_require__(1640);\n\nvar _user_actions = __webpack_require__(114);\n\nvar _utils = __webpack_require__(28);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _constants = __webpack_require__(10);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = __webpack_require__(197);\n\nvar _es = __webpack_require__(58);\n\nvar _logo = __webpack_require__(1737);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SignupEmail = function (_React$Component) {\n    (0, _inherits3.default)(SignupEmail, _React$Component);\n    (0, _createClass3.default)(SignupEmail, null, [{\n        key: 'propTypes',\n        get: function get() {\n            return {\n                location: _propTypes2.default.object\n            };\n        }\n    }]);\n\n    function SignupEmail(props) {\n        (0, _classCallCheck3.default)(this, SignupEmail);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SignupEmail.__proto__ || (0, _getPrototypeOf2.default)(SignupEmail)).call(this, props));\n\n        _this.handleSubmit = _this.handleSubmit.bind(_this);\n\n        _this.getInviteInfo = _this.getInviteInfo.bind(_this);\n        _this.renderEmailSignup = _this.renderEmailSignup.bind(_this);\n        _this.isUserValid = _this.isUserValid.bind(_this);\n\n        _this.state = _this.getInviteInfo();\n        return _this;\n    }\n\n    (0, _createClass3.default)(SignupEmail, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            (0, _diagnostics_actions.trackEvent)('signup', 'signup_user_01_welcome');\n        }\n    }, {\n        key: 'getInviteInfo',\n        value: function getInviteInfo() {\n            var data = this.props.location.query.d;\n            var hash = this.props.location.query.h;\n            var inviteId = this.props.location.query.id;\n            var email = '';\n            var teamDisplayName = '';\n            var teamName = '';\n            var teamId = '';\n            var loading = true;\n            var serverError = '';\n            var noOpenServerError = false;\n\n            if (hash && hash.length > 0) {\n                var parsedData = JSON.parse(data);\n                email = parsedData.email;\n                teamDisplayName = parsedData.display_name;\n                teamName = parsedData.name;\n                teamId = parsedData.id;\n                loading = false;\n            } else if (inviteId && inviteId.length > 0) {\n                loading = true;\n                (0, _team_actions.getInviteInfo)(inviteId, function (inviteData) {\n                    if (!inviteData) {\n                        return;\n                    }\n\n                    serverError = '';\n                    teamDisplayName = inviteData.display_name;\n                    teamName = inviteData.name;\n                    teamId = inviteData.id;\n                }, function () {\n                    noOpenServerError = true;\n                    serverError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'signup_user_completed.invalid_invite',\n                        defaultMessage: 'The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                    });\n                });\n\n                loading = false;\n                data = null;\n                hash = null;\n            } else {\n                loading = false;\n            }\n\n            return {\n                data: data,\n                hash: hash,\n                email: email,\n                teamDisplayName: teamDisplayName,\n                teamName: teamName,\n                teamId: teamId,\n                inviteId: inviteId,\n                loading: loading,\n                serverError: serverError,\n                noOpenServerError: noOpenServerError\n            };\n        }\n    }, {\n        key: 'finishSignup',\n        value: function finishSignup() {\n            var _this2 = this;\n\n            (0, _user_actions.loadMe)(function () {\n                var query = _this2.props.location.query;\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    _es.browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            });\n        }\n    }, {\n        key: 'handleSignupSuccess',\n        value: function handleSignupSuccess(user, data) {\n            var _this3 = this;\n\n            (0, _diagnostics_actions.trackEvent)('signup', 'signup_user_02_complete');\n            (0, _user_actions.loginById)(data.id, user.password, '', function () {\n                if (_this3.state.hash > 0) {\n                    _browser_store2.default.setGlobalItem(_this3.state.hash, (0, _stringify2.default)({ usedBefore: true }));\n                }\n\n                (0, _user_actions.loadMe)(function () {\n                    var query = _this3.props.location.query;\n                    if (query.redirect_to) {\n                        _es.browserHistory.push(query.redirect_to);\n                    } else {\n                        GlobalActions.redirectUserToDefaultTeam();\n                    }\n                });\n            }, function (err) {\n                if (err.id === 'api.user.login.not_verified.app_error') {\n                    _es.browserHistory.push('/should_verify_email?email=' + encodeURIComponent(user.email) + '&teamname=' + encodeURIComponent(_this3.state.teamName));\n                } else {\n                    _this3.setState({ serverError: err.message });\n                }\n            });\n        }\n    }, {\n        key: 'isUserValid',\n        value: function isUserValid() {\n            var providedEmail = this.refs.email.value.trim();\n            if (!providedEmail) {\n                this.setState({\n                    nameError: '',\n                    emailError: _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'signup_user_completed.required' }),\n                    passwordError: '',\n                    serverError: ''\n                });\n                return false;\n            }\n\n            if (!Utils.isEmail(providedEmail)) {\n                this.setState({\n                    nameError: '',\n                    emailError: _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'signup_user_completed.validEmail' }),\n                    passwordError: '',\n                    serverError: ''\n                });\n                return false;\n            }\n\n            var providedUsername = this.refs.name.value.trim().toLowerCase();\n            if (!providedUsername) {\n                this.setState({\n                    nameError: _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'signup_user_completed.required' }),\n                    emailError: '',\n                    passwordError: '',\n                    serverError: ''\n                });\n                return false;\n            }\n\n            var usernameError = Utils.isValidUsername(providedUsername);\n            if (usernameError === 'Cannot use a reserved word as a username.') {\n                this.setState({\n                    nameError: _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'signup_user_completed.reserved' }),\n                    emailError: '',\n                    passwordError: '',\n                    serverError: ''\n                });\n                return false;\n            } else if (usernameError) {\n                this.setState({\n                    nameError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'signup_user_completed.usernameLength',\n                        values: {\n                            min: _constants2.default.MIN_USERNAME_LENGTH,\n                            max: _constants2.default.MAX_USERNAME_LENGTH\n                        }\n                    }),\n                    emailError: '',\n                    passwordError: '',\n                    serverError: ''\n                });\n                return false;\n            }\n\n            var providedPassword = this.refs.password.value;\n            var pwdError = Utils.isValidPassword(providedPassword);\n            if (pwdError) {\n                this.setState({\n                    nameError: '',\n                    emailError: '',\n                    passwordError: pwdError,\n                    serverError: ''\n                });\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'handleSubmit',\n        value: function handleSubmit(e) {\n            var _this4 = this;\n\n            e.preventDefault();\n\n            if (this.isUserValid()) {\n                this.setState({\n                    nameError: '',\n                    emailError: '',\n                    passwordError: '',\n                    serverError: ''\n                });\n\n                var user = {\n                    email: this.refs.email.value.trim(),\n                    username: this.refs.name.value.trim().toLowerCase(),\n                    password: this.refs.password.value,\n                    allow_marketing: true\n                };\n\n                (0, _user_actions.createUserWithInvite)(user, this.state.data, this.state.hash, this.state.inviteId, this.handleSignupSuccess.bind(this, user), function (err) {\n                    _this4.setState({ serverError: err.message });\n                });\n            }\n        }\n    }, {\n        key: 'renderEmailSignup',\n        value: function renderEmailSignup() {\n            var emailError = null;\n            var emailHelpText = _react2.default.createElement(\n                'span',\n                { className: 'help-block' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.emailHelp',\n                    defaultMessage: 'Valid email required for sign-up'\n                })\n            );\n            var emailDivStyle = 'form-group';\n            if (this.state.emailError) {\n                emailError = _react2.default.createElement(\n                    'label',\n                    { className: 'control-label' },\n                    this.state.emailError\n                );\n                emailHelpText = '';\n                emailDivStyle += ' has-error';\n            }\n\n            var nameError = null;\n            var nameHelpText = _react2.default.createElement(\n                'span',\n                { className: 'help-block' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.userHelp',\n                    defaultMessage: 'Username must begin with a letter, and contain between {min} to {max} lowercase characters made up of numbers, letters, and the symbols \\'.\\', \\'-\\' and \\'_\\'',\n                    values: {\n                        min: _constants2.default.MIN_USERNAME_LENGTH,\n                        max: _constants2.default.MAX_USERNAME_LENGTH\n                    }\n                })\n            );\n            var nameDivStyle = 'form-group';\n            if (this.state.nameError) {\n                nameError = _react2.default.createElement(\n                    'label',\n                    { className: 'control-label' },\n                    this.state.nameError\n                );\n                nameHelpText = '';\n                nameDivStyle += ' has-error';\n            }\n\n            var passwordError = null;\n            var passwordDivStyle = 'form-group';\n            if (this.state.passwordError) {\n                passwordError = _react2.default.createElement(\n                    'label',\n                    { className: 'control-label' },\n                    this.state.passwordError\n                );\n                passwordDivStyle += ' has-error';\n            }\n\n            var yourEmailIs = null;\n            if (this.state.email) {\n                yourEmailIs = _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                    id: 'signup_user_completed.emailIs',\n                    defaultMessage: 'Your email address is <strong>{email}</strong>. You\\'ll use this address to sign in to {siteName}.',\n                    values: {\n                        email: this.state.email,\n                        siteName: global.window.mm_config.SiteName\n                    }\n                });\n            }\n\n            var emailContainerStyle = 'margin--extra';\n            if (this.state.email) {\n                emailContainerStyle = 'hidden';\n            }\n\n            return _react2.default.createElement(\n                'form',\n                null,\n                _react2.default.createElement(\n                    'div',\n                    { className: 'inner__content' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: emailContainerStyle },\n                        _react2.default.createElement(\n                            'h5',\n                            null,\n                            _react2.default.createElement(\n                                'strong',\n                                null,\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.whatis',\n                                    defaultMessage: 'What\\'s your email address?'\n                                })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: emailDivStyle },\n                            _react2.default.createElement('input', {\n                                id: 'email',\n                                type: 'email',\n                                ref: 'email',\n                                className: 'form-control',\n                                defaultValue: this.state.email,\n                                placeholder: '',\n                                maxLength: '128',\n                                autoFocus: true,\n                                spellCheck: 'false',\n                                autoCapitalize: 'off'\n                            }),\n                            emailError,\n                            emailHelpText\n                        )\n                    ),\n                    yourEmailIs,\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'margin--extra' },\n                        _react2.default.createElement(\n                            'h5',\n                            null,\n                            _react2.default.createElement(\n                                'strong',\n                                null,\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.chooseUser',\n                                    defaultMessage: 'Choose your username'\n                                })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: nameDivStyle },\n                            _react2.default.createElement('input', {\n                                id: 'name',\n                                type: 'text',\n                                ref: 'name',\n                                className: 'form-control',\n                                placeholder: '',\n                                maxLength: _constants2.default.MAX_USERNAME_LENGTH,\n                                spellCheck: 'false',\n                                autoCapitalize: 'off'\n                            }),\n                            nameError,\n                            nameHelpText\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'margin--extra' },\n                        _react2.default.createElement(\n                            'h5',\n                            null,\n                            _react2.default.createElement(\n                                'strong',\n                                null,\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.choosePwd',\n                                    defaultMessage: 'Choose your password'\n                                })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: passwordDivStyle },\n                            _react2.default.createElement('input', {\n                                id: 'password',\n                                type: 'password',\n                                ref: 'password',\n                                className: 'form-control',\n                                placeholder: '',\n                                maxLength: '128',\n                                spellCheck: 'false'\n                            }),\n                            passwordError\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        { className: 'margin--extra' },\n                        _react2.default.createElement(\n                            'button',\n                            {\n                                id: 'createAccountButton',\n                                type: 'submit',\n                                onClick: this.handleSubmit,\n                                className: 'btn-primary btn'\n                            },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.create',\n                                defaultMessage: 'Create Account'\n                            })\n                        )\n                    )\n                )\n            );\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var serverError = null;\n            if (this.state.serverError) {\n                serverError = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.serverError\n                    )\n                );\n            }\n\n            if (this.state.loading) {\n                return _react2.default.createElement(_loading_screen2.default, null);\n            }\n\n            var emailSignup = void 0;\n            if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                emailSignup = this.renderEmailSignup();\n            } else {\n                return null;\n            }\n\n            var terms = null;\n            if (!this.state.noOpenServerError && emailSignup) {\n                terms = _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'create_team.agreement',\n                        defaultMessage: 'By proceeding to create your account and use {siteName}, you agree to our <a href=\\'{TermsOfServiceLink}\\'>Terms of Service</a> and <a href=\\'{PrivacyPolicyLink}\\'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.',\n                        values: {\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }\n                    })\n                );\n            }\n\n            if (this.state.noOpenServerError) {\n                emailSignup = null;\n            }\n\n            var description = null;\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n                description = global.window.mm_config.CustomDescriptionText;\n            } else {\n                description = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'web.root.signup_info',\n                    defaultMessage: 'All team communication in one place, searchable and accessible anywhere'\n                });\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'div',\n                    { className: 'signup-header' },\n                    _react2.default.createElement(\n                        _es.Link,\n                        { to: '/' },\n                        _react2.default.createElement('span', { className: 'fa fa-chevron-left' }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'web.header.back'\n                        })\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container padding--less' },\n                        _react2.default.createElement('img', {\n                            className: 'signup-team-logo',\n                            src: _logo2.default\n                        }),\n                        _react2.default.createElement(\n                            'h1',\n                            null,\n                            global.window.mm_config.SiteName\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            description\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.lets',\n                                defaultMessage: 'Let\\'s create your account'\n                            })\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.haveAccount',\n                                defaultMessage: 'Already have an account?'\n                            }),\n                            ' ',\n                            _react2.default.createElement(\n                                _es.Link,\n                                {\n                                    to: '/login',\n                                    query: this.props.location.query\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.signIn',\n                                    defaultMessage: 'Click here to sign in.'\n                                })\n                            )\n                        ),\n                        emailSignup,\n                        serverError,\n                        terms\n                    )\n                )\n            );\n        }\n    }]);\n    return SignupEmail;\n}(_react2.default.Component); // Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = SignupEmail;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))\n\n/***/ }),\n\n/***/ 1509:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(51);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(32);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(33);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(50);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(49);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _reactIntl = __webpack_require__(197);\n\nvar _propTypes = __webpack_require__(151);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(14);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LoadingScreen = function (_React$Component) {\n    (0, _inherits3.default)(LoadingScreen, _React$Component);\n\n    function LoadingScreen(props) {\n        (0, _classCallCheck3.default)(this, LoadingScreen);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (LoadingScreen.__proto__ || (0, _getPrototypeOf2.default)(LoadingScreen)).call(this, props));\n\n        _this.state = {};\n        return _this;\n    }\n\n    (0, _createClass3.default)(LoadingScreen, [{\n        key: 'render',\n        value: function render() {\n            var message = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'loading_screen.loading',\n                defaultMessage: 'Loading'\n            });\n\n            if (this.props.message) {\n                message = this.props.message;\n            }\n\n            return _react2.default.createElement(\n                'div',\n                {\n                    className: 'loading-screen',\n                    style: { position: this.props.position }\n                },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'loading__content' },\n                    _react2.default.createElement(\n                        'h3',\n                        null,\n                        message\n                    ),\n                    _react2.default.createElement('div', { className: 'round round-1' }),\n                    _react2.default.createElement('div', { className: 'round round-2' }),\n                    _react2.default.createElement('div', { className: 'round round-3' })\n                )\n            );\n        }\n    }]);\n    return LoadingScreen;\n}(_react2.default.Component); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = LoadingScreen;\n\n\nLoadingScreen.defaultProps = {\n    position: 'relative'\n};\nLoadingScreen.propTypes = {\n    position: _propTypes2.default.oneOf(['absolute', 'fixed', 'relative', 'static', 'inherit']),\n    message: _propTypes2.default.node\n};\n\n/***/ }),\n\n/***/ 1640:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(112);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.checkIfTeamExists = checkIfTeamExists;\nexports.createTeam = createTeam;\nexports.updateTeam = updateTeam;\nexports.removeUserFromTeam = removeUserFromTeam;\nexports.updateTeamMemberRoles = updateTeamMemberRoles;\nexports.addUserToTeamFromInvite = addUserToTeamFromInvite;\nexports.addUsersToTeam = addUsersToTeam;\nexports.getInviteInfo = getInviteInfo;\nexports.inviteMembers = inviteMembers;\nexports.switchTeams = switchTeams;\nexports.getTeamsForUser = getTeamsForUser;\nexports.getTeamMembersForUser = getTeamMembersForUser;\n\nvar _team_store = __webpack_require__(43);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _channel_store = __webpack_require__(29);\n\nvar _channel_store2 = _interopRequireDefault(_channel_store);\n\nvar _web_client = __webpack_require__(52);\n\nvar _web_client2 = _interopRequireDefault(_web_client);\n\nvar _es = __webpack_require__(58);\n\nvar _redux_store = __webpack_require__(36);\n\nvar _redux_store2 = _interopRequireDefault(_redux_store);\n\nvar _users = __webpack_require__(115);\n\nvar _channels = __webpack_require__(79);\n\nvar _teams = __webpack_require__(200);\n\nvar _action_types = __webpack_require__(4);\n\nvar _reduxBatchedActions = __webpack_require__(81);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dispatch = _redux_store2.default.dispatch;\n\n// Redux actions\n// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar getState = _redux_store2.default.getState;\n\nfunction checkIfTeamExists(teamName, onSuccess, onError) {\n    (0, _teams.checkIfTeamExists)(teamName)(dispatch, getState).then(function (exists) {\n        if (exists != null && onSuccess) {\n            onSuccess(exists);\n        } else if (exists == null && onError) {\n            var serverError = getState().requests.teams.getTeam.error;\n            onError((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction createTeam(team, onSuccess, onError) {\n    (0, _teams.createTeam)(team)(dispatch, getState).then(function (rteam) {\n        if (rteam && onSuccess) {\n            _es.browserHistory.push('/' + rteam.name + '/channels/town-square');\n            onSuccess(rteam);\n        } else if (rteam == null && onError) {\n            var serverError = getState().requests.teams.createTeam.error;\n            onError((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction updateTeam(team, onSuccess, onError) {\n    (0, _teams.updateTeam)(team)(dispatch, getState).then(function (rteam) {\n        if (rteam && onSuccess) {\n            _es.browserHistory.push('/' + rteam.name + '/channels/town-square');\n            onSuccess(rteam);\n        } else if (rteam == null && onError) {\n            var serverError = getState().requests.teams.updateTeam.error;\n            onError((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction removeUserFromTeam(teamId, userId, success, error) {\n    (0, _teams.removeUserFromTeam)(teamId, userId)(dispatch, getState).then(function (data) {\n        (0, _users.getUser)(userId)(dispatch, getState);\n        (0, _teams.getTeamStats)(teamId)(dispatch, getState);\n\n        if (data && success) {\n            success();\n        } else if (data == null && error) {\n            var serverError = getState().requests.teams.removeUserFromTeam.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction updateTeamMemberRoles(teamId, userId, newRoles, success, error) {\n    (0, _teams.updateTeamMemberRoles)(teamId, userId, newRoles)(dispatch, getState).then(function (data) {\n        if (data && success) {\n            success();\n        } else if (data == null && error) {\n            var serverError = getState().requests.teams.updateTeamMember.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction addUserToTeamFromInvite(data, hash, inviteId, success, error) {\n    _web_client2.default.addUserToTeamFromInvite(data, hash, inviteId, function (team) {\n        var member = {\n            team_id: team.id,\n            user_id: getState().entities.users.currentUserId,\n            roles: 'team_user',\n            delete_at: 0,\n            msg_count: 0,\n            mention_count: 0\n        };\n\n        dispatch((0, _reduxBatchedActions.batchActions)([{\n            type: _action_types.TeamTypes.RECEIVED_TEAMS_LIST,\n            data: [team]\n        }, {\n            type: _action_types.TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n            data: member\n        }]));\n\n        if (success) {\n            success(team);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction addUsersToTeam(teamId, userIds, success, error) {\n    (0, _teams.addUsersToTeam)(teamId, userIds)(dispatch, getState).then(function (teamMembers) {\n        if (teamMembers && success) {\n            success(teamMembers);\n        } else if (teamMembers == null && error) {\n            var serverError = getState().requests.teams.addUserToTeam.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction getInviteInfo(inviteId, success, error) {\n    _web_client2.default.getInviteInfo(inviteId, function (inviteData) {\n        if (success) {\n            success(inviteData);\n        }\n    }, function (err) {\n        if (error) {\n            error(err);\n        }\n    });\n}\n\nfunction inviteMembers(data, success, error) {\n    if (!data.invites) {\n        success();\n    }\n    var emails = [];\n    data.invites.forEach(function (i) {\n        emails.push(i.email);\n    });\n    (0, _teams.sendEmailInvitesToTeam)(_team_store2.default.getCurrentId(), emails)(dispatch, getState).then(function (result) {\n        if (result && success) {\n            success();\n        } else if (result == null && error) {\n            var serverError = getState().requests.teams.emailInvite.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction switchTeams(url) {\n    (0, _channels.viewChannel)(_channel_store2.default.getCurrentId())(dispatch, getState);\n    _es.browserHistory.push(url);\n}\n\nfunction getTeamsForUser(userId, success, error) {\n    (0, _teams.getTeamsForUser)(userId)(dispatch, getState).then(function (result) {\n        if (result && success) {\n            success(result);\n        } else if (result == null && error) {\n            var serverError = getState().requests.teams.getTeams.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\nfunction getTeamMembersForUser(userId, success, error) {\n    (0, _teams.getTeamMembersForUser)(userId)(dispatch, getState).then(function (result) {\n        if (result && success) {\n            success(result);\n        } else if (result == null && error) {\n            var serverError = getState().requests.teams.getTeamMembers.error;\n            error((0, _extends3.default)({ id: serverError.server_error_id }, serverError));\n        }\n    });\n}\n\n/***/ }),\n\n/***/ 1737:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 40.e6f70a151bd223c92f3c.js","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport BrowserStore from 'stores/browser_store.jsx';\nimport {getInviteInfo} from 'actions/team_actions.jsx';\nimport {loadMe, loginById, createUserWithInvite} from 'actions/user_actions.jsx';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\nimport {browserHistory, Link} from 'react-router/es6';\n\nimport logoImage from 'images/logo.png';\n\nexport default class SignupEmail extends React.Component {\n    static get propTypes() {\n        return {\n            location: PropTypes.object\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.getInviteInfo = this.getInviteInfo.bind(this);\n        this.renderEmailSignup = this.renderEmailSignup.bind(this);\n        this.isUserValid = this.isUserValid.bind(this);\n\n        this.state = this.getInviteInfo();\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_user_01_welcome');\n    }\n\n    getInviteInfo() {\n        let data = this.props.location.query.d;\n        let hash = this.props.location.query.h;\n        const inviteId = this.props.location.query.id;\n        let email = '';\n        let teamDisplayName = '';\n        let teamName = '';\n        let teamId = '';\n        let loading = true;\n        let serverError = '';\n        let noOpenServerError = false;\n\n        if (hash && hash.length > 0) {\n            const parsedData = JSON.parse(data);\n            email = parsedData.email;\n            teamDisplayName = parsedData.display_name;\n            teamName = parsedData.name;\n            teamId = parsedData.id;\n            loading = false;\n        } else if (inviteId && inviteId.length > 0) {\n            loading = true;\n            getInviteInfo(\n                inviteId,\n                (inviteData) => {\n                    if (!inviteData) {\n                        return;\n                    }\n\n                    serverError = '';\n                    teamDisplayName = inviteData.display_name;\n                    teamName = inviteData.name;\n                    teamId = inviteData.id;\n                },\n                () => {\n                    noOpenServerError = true;\n                    serverError = (\n                        <FormattedMessage\n                            id='signup_user_completed.invalid_invite'\n                            defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                        />\n                    );\n                }\n            );\n\n            loading = false;\n            data = null;\n            hash = null;\n        } else {\n            loading = false;\n        }\n\n        return {\n            data,\n            hash,\n            email,\n            teamDisplayName,\n            teamName,\n            teamId,\n            inviteId,\n            loading,\n            serverError,\n            noOpenServerError\n        };\n    }\n\n    finishSignup() {\n        loadMe(\n            () => {\n                const query = this.props.location.query;\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        );\n    }\n\n    handleSignupSuccess(user, data) {\n        trackEvent('signup', 'signup_user_02_complete');\n        loginById(\n            data.id,\n            user.password,\n            '',\n            () => {\n                if (this.state.hash > 0) {\n                    BrowserStore.setGlobalItem(this.state.hash, JSON.stringify({usedBefore: true}));\n                }\n\n                loadMe(\n                    () => {\n                        const query = this.props.location.query;\n                        if (query.redirect_to) {\n                            browserHistory.push(query.redirect_to);\n                        } else {\n                            GlobalActions.redirectUserToDefaultTeam();\n                        }\n                    }\n                );\n            },\n            (err) => {\n                if (err.id === 'api.user.login.not_verified.app_error') {\n                    browserHistory.push('/should_verify_email?email=' + encodeURIComponent(user.email) + '&teamname=' + encodeURIComponent(this.state.teamName));\n                } else {\n                    this.setState({serverError: err.message});\n                }\n            }\n        );\n    }\n\n    isUserValid() {\n        const providedEmail = this.refs.email.value.trim();\n        if (!providedEmail) {\n            this.setState({\n                nameError: '',\n                emailError: (<FormattedMessage id='signup_user_completed.required'/>),\n                passwordError: '',\n                serverError: ''\n            });\n            return false;\n        }\n\n        if (!Utils.isEmail(providedEmail)) {\n            this.setState({\n                nameError: '',\n                emailError: (<FormattedMessage id='signup_user_completed.validEmail'/>),\n                passwordError: '',\n                serverError: ''\n            });\n            return false;\n        }\n\n        const providedUsername = this.refs.name.value.trim().toLowerCase();\n        if (!providedUsername) {\n            this.setState({\n                nameError: (<FormattedMessage id='signup_user_completed.required'/>),\n                emailError: '',\n                passwordError: '',\n                serverError: ''\n            });\n            return false;\n        }\n\n        const usernameError = Utils.isValidUsername(providedUsername);\n        if (usernameError === 'Cannot use a reserved word as a username.') {\n            this.setState({\n                nameError: (<FormattedMessage id='signup_user_completed.reserved'/>),\n                emailError: '',\n                passwordError: '',\n                serverError: ''\n            });\n            return false;\n        } else if (usernameError) {\n            this.setState({\n                nameError: (\n                    <FormattedMessage\n                        id='signup_user_completed.usernameLength'\n                        values={{\n                            min: Constants.MIN_USERNAME_LENGTH,\n                            max: Constants.MAX_USERNAME_LENGTH\n                        }}\n                    />\n                ),\n                emailError: '',\n                passwordError: '',\n                serverError: ''\n            });\n            return false;\n        }\n\n        const providedPassword = this.refs.password.value;\n        const pwdError = Utils.isValidPassword(providedPassword);\n        if (pwdError) {\n            this.setState({\n                nameError: '',\n                emailError: '',\n                passwordError: pwdError,\n                serverError: ''\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        if (this.isUserValid()) {\n            this.setState({\n                nameError: '',\n                emailError: '',\n                passwordError: '',\n                serverError: ''\n            });\n\n            const user = {\n                email: this.refs.email.value.trim(),\n                username: this.refs.name.value.trim().toLowerCase(),\n                password: this.refs.password.value,\n                allow_marketing: true\n            };\n\n            createUserWithInvite(user,\n                this.state.data,\n                this.state.hash,\n                this.state.inviteId,\n                this.handleSignupSuccess.bind(this, user),\n                (err) => {\n                    this.setState({serverError: err.message});\n                }\n            );\n        }\n    }\n\n    renderEmailSignup() {\n        let emailError = null;\n        let emailHelpText = (\n            <span className='help-block'>\n                <FormattedMessage\n                    id='signup_user_completed.emailHelp'\n                    defaultMessage='Valid email required for sign-up'\n                />\n            </span>\n        );\n        let emailDivStyle = 'form-group';\n        if (this.state.emailError) {\n            emailError = (<label className='control-label'>{this.state.emailError}</label>);\n            emailHelpText = '';\n            emailDivStyle += ' has-error';\n        }\n\n        let nameError = null;\n        let nameHelpText = (\n            <span className='help-block'>\n                <FormattedMessage\n                    id='signup_user_completed.userHelp'\n                    defaultMessage=\"Username must begin with a letter, and contain between {min} to {max} lowercase characters made up of numbers, letters, and the symbols '.', '-' and '_'\"\n                    values={{\n                        min: Constants.MIN_USERNAME_LENGTH,\n                        max: Constants.MAX_USERNAME_LENGTH\n                    }}\n                />\n            </span>\n        );\n        let nameDivStyle = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameHelpText = '';\n            nameDivStyle += ' has-error';\n        }\n\n        let passwordError = null;\n        let passwordDivStyle = 'form-group';\n        if (this.state.passwordError) {\n            passwordError = <label className='control-label'>{this.state.passwordError}</label>;\n            passwordDivStyle += ' has-error';\n        }\n\n        let yourEmailIs = null;\n        if (this.state.email) {\n            yourEmailIs = (\n                <FormattedHTMLMessage\n                    id='signup_user_completed.emailIs'\n                    defaultMessage=\"Your email address is <strong>{email}</strong>. You'll use this address to sign in to {siteName}.\"\n                    values={{\n                        email: this.state.email,\n                        siteName: global.window.mm_config.SiteName\n                    }}\n                />\n            );\n        }\n\n        let emailContainerStyle = 'margin--extra';\n        if (this.state.email) {\n            emailContainerStyle = 'hidden';\n        }\n\n        return (\n            <form>\n                <div className='inner__content'>\n                    <div className={emailContainerStyle}>\n                        <h5><strong>\n                            <FormattedMessage\n                                id='signup_user_completed.whatis'\n                                defaultMessage=\"What's your email address?\"\n                            />\n                        </strong></h5>\n                        <div className={emailDivStyle}>\n                            <input\n                                id='email'\n                                type='email'\n                                ref='email'\n                                className='form-control'\n                                defaultValue={this.state.email}\n                                placeholder=''\n                                maxLength='128'\n                                autoFocus={true}\n                                spellCheck='false'\n                                autoCapitalize='off'\n                            />\n                            {emailError}\n                            {emailHelpText}\n                        </div>\n                    </div>\n                    {yourEmailIs}\n                    <div className='margin--extra'>\n                        <h5><strong>\n                            <FormattedMessage\n                                id='signup_user_completed.chooseUser'\n                                defaultMessage='Choose your username'\n                            />\n                        </strong></h5>\n                        <div className={nameDivStyle}>\n                            <input\n                                id='name'\n                                type='text'\n                                ref='name'\n                                className='form-control'\n                                placeholder=''\n                                maxLength={Constants.MAX_USERNAME_LENGTH}\n                                spellCheck='false'\n                                autoCapitalize='off'\n                            />\n                            {nameError}\n                            {nameHelpText}\n                        </div>\n                    </div>\n                    <div className='margin--extra'>\n                        <h5><strong>\n                            <FormattedMessage\n                                id='signup_user_completed.choosePwd'\n                                defaultMessage='Choose your password'\n                            />\n                        </strong></h5>\n                        <div className={passwordDivStyle}>\n                            <input\n                                id='password'\n                                type='password'\n                                ref='password'\n                                className='form-control'\n                                placeholder=''\n                                maxLength='128'\n                                spellCheck='false'\n                            />\n                            {passwordError}\n                        </div>\n                    </div>\n                    <p className='margin--extra'>\n                        <button\n                            id='createAccountButton'\n                            type='submit'\n                            onClick={this.handleSubmit}\n                            className='btn-primary btn'\n                        >\n                            <FormattedMessage\n                                id='signup_user_completed.create'\n                                defaultMessage='Create Account'\n                            />\n                        </button>\n                    </p>\n                </div>\n            </form>\n        );\n    }\n\n    render() {\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        let emailSignup;\n        if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n            emailSignup = this.renderEmailSignup();\n        } else {\n            return null;\n        }\n\n        let terms = null;\n        if (!this.state.noOpenServerError && emailSignup) {\n            terms = (\n                <p>\n                    <FormattedHTMLMessage\n                        id='create_team.agreement'\n                        defaultMessage=\"By proceeding to create your account and use {siteName}, you agree to our <a href='{TermsOfServiceLink}'>Terms of Service</a> and <a href='{PrivacyPolicyLink}'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.\"\n                        values={{\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        if (this.state.noOpenServerError) {\n            emailSignup = null;\n        }\n\n        let description = null;\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n            description = global.window.mm_config.CustomDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <div className='signup-header'>\n                    <Link to='/'>\n                        <span className='fa fa-chevron-left'/>\n                        <FormattedMessage\n                            id='web.header.back'\n                        />\n                    </Link>\n                </div>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container padding--less'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <h1>{global.window.mm_config.SiteName}</h1>\n                        <h4 className='color--light'>\n                            {description}\n                        </h4>\n                        <h4 className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.lets'\n                                defaultMessage=\"Let's create your account\"\n                            />\n                        </h4>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={'/login'}\n                                query={this.props.location.query}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                        {emailSignup}\n                        {serverError}\n                        {terms}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/signup/components/signup_email.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport {FormattedMessage} from 'react-intl';\n\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\n\nexport default class LoadingScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        let message = (\n            <FormattedMessage\n                id='loading_screen.loading'\n                defaultMessage='Loading'\n            />\n        );\n\n        if (this.props.message) {\n            message = this.props.message;\n        }\n\n        return (\n            <div\n                className='loading-screen'\n                style={{position: this.props.position}}\n            >\n                <div className='loading__content'>\n                    <h3>\n                        {message}\n                    </h3>\n                    <div className='round round-1'/>\n                    <div className='round round-2'/>\n                    <div className='round round-3'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nLoadingScreen.defaultProps = {\n    position: 'relative'\n};\nLoadingScreen.propTypes = {\n    position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'inherit']),\n    message: PropTypes.node\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/loading_screen.jsx","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport TeamStore from 'stores/team_store.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\n\nimport Client from 'client/web_client.jsx';\n\nimport {browserHistory} from 'react-router/es6';\n\n// Redux actions\nimport store from 'stores/redux_store.jsx';\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nimport {getUser} from 'mattermost-redux/actions/users';\nimport {viewChannel} from 'mattermost-redux/actions/channels';\nimport {\n    createTeam as createTeamRedux,\n    updateTeam as updateTeamRedux,\n    removeUserFromTeam as removeUserFromTeamRedux,\n    getTeamStats,\n    checkIfTeamExists as checkIfTeamExistsRedux,\n    updateTeamMemberRoles as updateTeamMemberRolesRedux,\n    addUsersToTeam as addUsersToTeamRedux,\n    sendEmailInvitesToTeam,\n    getTeamsForUser as getTeamsForUserRedux,\n    getTeamMembersForUser as getTeamMembersForUserRedux\n} from 'mattermost-redux/actions/teams';\n\nimport {TeamTypes} from 'mattermost-redux/action_types';\nimport {batchActions} from 'redux-batched-actions';\n\nexport function checkIfTeamExists(teamName, onSuccess, onError) {\n    checkIfTeamExistsRedux(teamName)(dispatch, getState).then(\n        (exists) => {\n            if (exists != null && onSuccess) {\n                onSuccess(exists);\n            } else if (exists == null && onError) {\n                const serverError = getState().requests.teams.getTeam.error;\n                onError({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function createTeam(team, onSuccess, onError) {\n    createTeamRedux(team)(dispatch, getState).then(\n        (rteam) => {\n            if (rteam && onSuccess) {\n                browserHistory.push('/' + rteam.name + '/channels/town-square');\n                onSuccess(rteam);\n            } else if (rteam == null && onError) {\n                const serverError = getState().requests.teams.createTeam.error;\n                onError({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function updateTeam(team, onSuccess, onError) {\n    updateTeamRedux(team)(dispatch, getState).then(\n        (rteam) => {\n            if (rteam && onSuccess) {\n                browserHistory.push('/' + rteam.name + '/channels/town-square');\n                onSuccess(rteam);\n            } else if (rteam == null && onError) {\n                const serverError = getState().requests.teams.updateTeam.error;\n                onError({id: serverError.server_error_id, ...serverError});\n            }\n        },\n    );\n}\n\nexport function removeUserFromTeam(teamId, userId, success, error) {\n    removeUserFromTeamRedux(teamId, userId)(dispatch, getState).then(\n        (data) => {\n            getUser(userId)(dispatch, getState);\n            getTeamStats(teamId)(dispatch, getState);\n\n            if (data && success) {\n                success();\n            } else if (data == null && error) {\n                const serverError = getState().requests.teams.removeUserFromTeam.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        },\n    );\n}\n\nexport function updateTeamMemberRoles(teamId, userId, newRoles, success, error) {\n    updateTeamMemberRolesRedux(teamId, userId, newRoles)(dispatch, getState).then(\n        (data) => {\n            if (data && success) {\n                success();\n            } else if (data == null && error) {\n                const serverError = getState().requests.teams.updateTeamMember.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function addUserToTeamFromInvite(data, hash, inviteId, success, error) {\n    Client.addUserToTeamFromInvite(\n        data,\n        hash,\n        inviteId,\n        (team) => {\n            const member = {\n                team_id: team.id,\n                user_id: getState().entities.users.currentUserId,\n                roles: 'team_user',\n                delete_at: 0,\n                msg_count: 0,\n                mention_count: 0\n            };\n\n            dispatch(batchActions([\n                {\n                    type: TeamTypes.RECEIVED_TEAMS_LIST,\n                    data: [team]\n                },\n                {\n                    type: TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n                    data: member\n                }\n            ]));\n\n            if (success) {\n                success(team);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function addUsersToTeam(teamId, userIds, success, error) {\n    addUsersToTeamRedux(teamId, userIds)(dispatch, getState).then(\n        (teamMembers) => {\n            if (teamMembers && success) {\n                success(teamMembers);\n            } else if (teamMembers == null && error) {\n                const serverError = getState().requests.teams.addUserToTeam.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function getInviteInfo(inviteId, success, error) {\n    Client.getInviteInfo(\n        inviteId,\n        (inviteData) => {\n            if (success) {\n                success(inviteData);\n            }\n        },\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function inviteMembers(data, success, error) {\n    if (!data.invites) {\n        success();\n    }\n    const emails = [];\n    data.invites.forEach((i) => {\n        emails.push(i.email);\n    });\n    sendEmailInvitesToTeam(TeamStore.getCurrentId(), emails)(dispatch, getState).then(\n        (result) => {\n            if (result && success) {\n                success();\n            } else if (result == null && error) {\n                const serverError = getState().requests.teams.emailInvite.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function switchTeams(url) {\n    viewChannel(ChannelStore.getCurrentId())(dispatch, getState);\n    browserHistory.push(url);\n}\n\nexport function getTeamsForUser(userId, success, error) {\n    getTeamsForUserRedux(userId)(dispatch, getState).then(\n        (result) => {\n            if (result && success) {\n                success(result);\n            } else if (result == null && error) {\n                const serverError = getState().requests.teams.getTeams.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport function getTeamMembersForUser(userId, success, error) {\n    getTeamMembersForUserRedux(userId)(dispatch, getState).then(\n        (result) => {\n            if (result && success) {\n                success(result);\n            } else if (result == null && error) {\n                const serverError = getState().requests.teams.getTeamMembers.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./actions/team_actions.jsx","module.exports = __webpack_public_path__ + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./images/logo.png\n// module id = 1737\n// module chunks = 11 18 19 27 40 41 47 49 51"],"sourceRoot":""}