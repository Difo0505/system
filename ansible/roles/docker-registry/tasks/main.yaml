- include_vars: vault/main.yaml
  tags: include

- name: Create docker-registry directory
  file: path="{{ item }}" state=directory owner=root group=root mode=0755
  with_items:
    - "{{ resgistry_dir }}"
    - "{{ data_dir }}"
    - "{{ auth_dir }}"
    - "{{ cert_dir }}"

- name: Copy docker-compose.yaml into docker-registry directory
  copy:
    src: docker-compose.yaml
    dest: "{{ resgistry_dir }}/docker-compose.yaml"
    owner: root
    group: root
    mode: 0644

### For SSL
- name: Copy script gencert.sh
  copy:
    src: gencert.sh
    dest: "{{ cert_dir }}/gencert.sh"
    owner: root
    group: root
    mode: 0500

- name: Gen cert
  command: "./gencert.sh {{ server_name }}"
  args:
    chdir: "{{ cert_dir }}"

- name: DEBUG
  debug: msg="Copy the domain.crt file to /etc/docker/certs.d/{{ server_name }}:5000/ca.crt on every Docker host. You do not need to restart Docker."
###

- name: Copy script reg_htpasswd.sh
  copy:
    src: reg_htpasswd.sh
    dest: "{{ auth_dir }}/reg_htpasswd.sh"
    owner: root
    group: root
    mode: 0500

- name: Create htpasswd
  command: "./reg_htpasswd.sh {{ item.name }} {{ item.passwd }} htpasswd"
  args:
    chdir: "{{ auth_dir }}"
  with_items: "{{ auth_users }}"

- name: docker-compose up
  command: "{{ item }} chdir={{ resgistry_dir }}"
  with_items:
    - docker-compose stop
    - docker-compose rm -f
    - docker-compose up -d

- name: DEBUG
  debug: msg="curl https://{{ server_name }}:5000"

- name: DEBUG
  debug: msg="docker login {{ server_name }}:5000 using username and passwd in htpasswd"
